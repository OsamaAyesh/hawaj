
// import 'package:app_mobile/features/common/map/presenation/pages/map_screen.dart';
// import 'package:flutter/material.dart';
// import 'dart:math' as math;
// import 'package:permission_handler/permission_handler.dart';
// import 'package:speech_to_text/speech_to_text.dart';
//
// import 'package:app_mobile/core/resources/manager_colors.dart';
// import 'package:app_mobile/core/resources/manager_font_size.dart';
// import 'package:app_mobile/core/resources/manager_height.dart';
// import 'package:app_mobile/core/resources/manager_images.dart';
// import 'package:app_mobile/core/resources/manager_styles.dart';
// import 'package:app_mobile/core/resources/manager_width.dart';
// import 'package:get/get.dart';
//
// import '../../../map/domain/di/di.dart';
//
// class HawajWelcomeStartScreen extends StatefulWidget {
//   const HawajWelcomeStartScreen({super.key});
//
//   @override
//   State<HawajWelcomeStartScreen> createState() =>
//       _HawajWelcomeStartScreenState();
// }
//
// class _HawajWelcomeStartScreenState extends State<HawajWelcomeStartScreen>
//     with TickerProviderStateMixin {
//   late AnimationController _glowController;
//   late AnimationController _waveController;
//
//   /// Speech to Text
//   final SpeechToText _speechToText = SpeechToText();
//   bool _speechEnabled = false;
//   bool _isListening = false;
//   String _wordsSpoken = "";
//   double _confidenceLevel = 0;
//   bool _permissionGranted = false;
//
//   @override
//   void initState() {
//     super.initState();
//
//     // Animations
//     _glowController = AnimationController(
//       vsync: this,
//       duration: const Duration(seconds: 2),
//     )..repeat(reverse: true);
//
//     _waveController = AnimationController(
//       vsync: this,
//       duration: const Duration(milliseconds: 1500),
//     )..repeat();
//
//     // Speech
//     _initSpeech();
//   }
//
//   /// Initialize Speech Recognition
//   Future<void> _initSpeech() async {
//     // طلب إذن الميكروفون أولاً
//     final status = await Permission.microphone.request();
//
//     if (status.isGranted) {
//       setState(() {
//         _permissionGranted = true;
//       });
//
//       // تهيئة التعرف على الكلام بعد الحصول على الإذن
//       _speechEnabled = await _speechToText.initialize(
//         onStatus: (status) {
//           print('Speech recognition status: $status');
//         },
//         onError: (error) {
//           print('Speech recognition error: $error');
//         },
//       );
//
//       setState(() {});
//     } else {
//       // إذا لم يتم منح الإذن
//       print('Microphone permission denied');
//       // يمكنك إضافة رسالة للمستخدم هنا
//     }
//   }
//
//   Future<void> _startListening() async {
//     if (!_permissionGranted) {
//       // إذا لم يكن لدينا إذن، نطلبه مرة أخرى
//       final status = await Permission.microphone.request();
//       if (!status.isGranted) {
//         // إعلام المستخدم أنه بحاجة إلى منح الإذن
//         if (mounted) {
//           ScaffoldMessenger.of(context).showSnackBar(
//             const SnackBar(
//               content: Text('يجب منح إذن استخدام الميكروفون للتمكن من التحدث'),
//             ),
//           );
//         }
//         return;
//       } else {
//         setState(() {
//           _permissionGranted = true;
//         });
//
//         // تهيئة التعرف على الكلام بعد الحصول على الإذن
//         _speechEnabled = await _speechToText.initialize(
//           onStatus: (status) {
//             print('Speech recognition status: $status');
//           },
//           onError: (error) {
//             print('Speech recognition error: $error');
//           },
//         );
//       }
//     }
//
//     if (_speechEnabled) {
//       await _speechToText.listen(
//         onResult: _onSpeechResult,
//         localeId: "ar-SA", // تقدر تبدل حسب اللهجة
//         listenMode: ListenMode.confirmation,
//       );
//       setState(() {
//         _isListening = true;
//       });
//     } else {
//       // إعادة تهيئة التعرف على الكلام إذا لزم الأمر
//       await _initSpeech();
//       if (_speechEnabled) {
//         await _startListening();
//       }
//     }
//   }
//
//   void _stopListening() async {
//     await _speechToText.stop();
//     setState(() {
//       _isListening = false;
//     });
//   }
//
//   void _onSpeechResult(result) {
//     setState(() {
//       _wordsSpoken = result.recognizedWords;
//       _confidenceLevel = result.confidence;
//
//       // إذا كان هناك كلام معترف به، يمكننا إضافة رد تلقائي
//       if (_wordsSpoken.isNotEmpty && _wordsSpoken.length > 3) {
//         // إضافة رد تلقائي بعد ثانية واحدة
//         Future.delayed(const Duration(seconds: 1), () {
//           if (mounted) {
//             setState(() {
//               _wordsSpoken = "حوّاج: سأساعدك في العثور على $_wordsSpoken";
//             });
//           }
//         });
//       }
//     });
//   }
//
//   @override
//   void dispose() {
//     _glowController.dispose();
//     _waveController.dispose();
//     _speechToText.stop();
//     super.dispose();
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Colors.white,
//       body: Stack(
//         alignment: Alignment.center,
//         children: [
//           /// Background gradient
//           Container(
//             decoration: BoxDecoration(
//               gradient: LinearGradient(
//                 colors: [
//                   ManagerColors.primaryColor.withOpacity(0.05),
//                   Colors.white,
//                   ManagerColors.primaryColor.withOpacity(0.05),
//                 ],
//                 begin: Alignment.topLeft,
//                 end: Alignment.bottomRight,
//               ),
//             ),
//           ),
//
//           /// Main Column
//           SafeArea(
//             child: Column(
//               children: [
//                 const Spacer(),
//
//                 /// Title
//                 Text(
//                   "شو بتحب أساعدك فيه اليوم؟",
//                   style: getRegularTextStyle(
//                     fontSize: ManagerFontSize.s16,
//                     color: ManagerColors.primaryColor,
//                   ),
//                 ),
//                 SizedBox(height: ManagerHeight.h12),
//                 Padding(
//                   padding:
//                   EdgeInsets.symmetric(horizontal: ManagerWidth.w28),
//                   child: Text(
//                     "حوّاج موجود ليسهل حياتك… يقترح عليك اللي بتحتاجه قبل حتى ما تطلبه ",
//                     style: getBoldTextStyle(
//                       fontSize: ManagerFontSize.s18,
//                       color: ManagerColors.primaryColor,
//                     ),
//                     textAlign: TextAlign.center,
//                   ),
//                 ),
//
//                 const Spacer(),
//
//                 /// AI Robot
//                 Image.asset(
//                   ManagerImages.welcomeStartImage,
//                   width: ManagerWidth.w220,
//                 ),
//
//                 const Spacer(),
//
//                 /// Suggestions Card + Spoken Words
//                 Container(
//                   margin: EdgeInsets.symmetric(
//                       horizontal: ManagerWidth.w20,
//                       vertical: ManagerHeight.h12),
//                   padding: EdgeInsets.all(ManagerWidth.w16),
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     borderRadius: BorderRadius.circular(22),
//                     boxShadow: [
//                       BoxShadow(
//                         color: Colors.black.withOpacity(0.07),
//                         blurRadius: 12,
//                         offset: const Offset(0, 6),
//                       ),
//                     ],
//                   ),
//                   child: Column(
//                     children: [
//                       Text(
//                         "اقتراح اليوم",
//                         style: getBoldTextStyle(
//                           fontSize: ManagerFontSize.s18,
//                           color: ManagerColors.primaryColor,
//                         ),
//                       ),
//                       SizedBox(height: ManagerHeight.h8),
//                       Text(
//                         _wordsSpoken.isNotEmpty
//                             ? _wordsSpoken
//                             : "حوّاج: خليني أنصحك بأفضل عروض الأكل اليوم ",
//                         style: getRegularTextStyle(
//                           fontSize: ManagerFontSize.s14,
//                           color: Colors.black87,
//                         ),
//                         textAlign: TextAlign.center,
//                       ),
//                       if (_speechToText.isNotListening &&
//                           _confidenceLevel > 0)
//                         Padding(
//                           padding: const EdgeInsets.only(top: 12),
//                           child: Text(
//                             "مستوى الثقة: ${(_confidenceLevel * 100.0).toStringAsFixed(1)}%",
//                             style: TextStyle(
//                               fontSize: 14,
//                               color: Colors.grey[600],
//                             ),
//                           ),
//                         ),
//                     ],
//                   ),
//                 ),
//
//                 const Spacer(),
//
//                 /// Mic button with glow + waves
//                 Stack(
//                   alignment: Alignment.center,
//                   children: [
//                     // Glowing background
//                     ScaleTransition(
//                       scale: Tween(begin: 0.9, end: 1.1).animate(
//                         CurvedAnimation(
//                           parent: _glowController,
//                           curve: Curves.easeInOut,
//                         ),
//                       ),
//                       child: Container(
//                         width: 120,
//                         height: 120,
//                         decoration: BoxDecoration(
//                           shape: BoxShape.circle,
//                           color:
//                           ManagerColors.primaryColor.withOpacity(0.1),
//                         ),
//                       ),
//                     ),
//
//                     // Waves around mic
//                     CustomPaint(
//                       painter: WavePainter(_waveController),
//                       size: const Size(180, 180),
//                     ),
//
//                     // Main Mic button
//                     ElevatedButton(
//                       onPressed: _speechToText.isListening
//                           ? _stopListening
//                           : _startListening,
//                       style: ElevatedButton.styleFrom(
//                         shape: const CircleBorder(),
//                         padding: const EdgeInsets.all(28),
//                         backgroundColor: _permissionGranted
//                             ? ManagerColors.primaryColor
//                             : Colors.grey,
//                         shadowColor: _permissionGranted
//                             ? ManagerColors.primaryColor.withOpacity(0.5)
//                             : Colors.grey.withOpacity(0.5),
//                         elevation: 12,
//                       ),
//                       child: Icon(
//                         _speechToText.isListening
//                             ? Icons.mic
//                             : Icons.mic_none,
//                         size: 40,
//                         color: Colors.white,
//                       ),
//                     ),
//                   ],
//                 ),
//
//                 // إضافة رسالة إذا لم يتم منح الإذن
//                 if (!_permissionGranted)
//                   Padding(
//                     padding: const EdgeInsets.all(16.0),
//                     child: Text(
//                       'يجب منح إذن استخدام الميكروفون للتمكن من التحدث',
//                       style: TextStyle(
//                         color: Colors.red,
//                         fontSize: ManagerFontSize.s14,
//                       ),
//                       textAlign: TextAlign.center,
//                     ),
//                   ),
//
//                 const Spacer(),
//               ],
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }
//
// /// ====== Wave Painter for Animated Mic ======
// class WavePainter extends CustomPainter {
//   final Animation<double> animation;
//
//   WavePainter(this.animation) : super(repaint: animation);
//
//   @override
//   void paint(Canvas canvas, Size size) {
//     final paint = Paint()
//       ..color = Colors.deepPurple.withOpacity(0.2)
//       ..style = PaintingStyle.stroke
//       ..strokeWidth = 2.5;
//
//     final center = Offset(size.width / 2, size.height / 2);
//     final radius = size.width / 4;
//
//     for (int i = 0; i < 3; i++) {
//       final progress = ((animation.value + (i * 0.3)) % 1.0);
//       final waveRadius = radius + (progress * 60);
//       paint.color = paint.color.withOpacity((1 - progress).clamp(0.0, 1.0));
//       canvas.drawCircle(center, waveRadius, paint);
//     }
//   }
//
//   @override
//   bool shouldRepaint(covariant WavePainter oldDelegate) => true;
// }


// import 'dart:typed_data';
// import 'dart:ui' as ui;
// import 'package:app_mobile/core/resources/manager_height.dart';
// import 'package:app_mobile/core/resources/manager_icons.dart';
// import 'package:app_mobile/core/resources/manager_width.dart';
// import 'package:app_mobile/core/util/snack_bar.dart';
// import 'package:flutter/material.dart';
// import 'package:get/get.dart';
// import 'package:google_maps_flutter/google_maps_flutter.dart';
// import 'package:geolocator/geolocator.dart';
// import 'package:flutter_slider_drawer/flutter_slider_drawer.dart';
// import 'package:speech_to_text/speech_to_text.dart';
// import 'package:permission_handler/permission_handler.dart';
// import 'package:confetti/confetti.dart';
//
// import '../../../../../core/resources/manager_colors.dart';
// import '../../../../../core/resources/manager_font_size.dart';
// import '../../../../../core/resources/manager_styles.dart';
// import '../../../../../core/widgets/loading_widget.dart';
// import '../controller/map_controller.dart';
// import '../widgets/drawer_widget.dart';
// import '../widgets/location_error_widget.dart';
// import '../widgets/menu_icon_button.dart';
// import '../widgets/notfication_icon_button.dart';
//
// class MapScreen extends StatefulWidget {
//   const MapScreen({super.key});
//
//   @override
//   State<MapScreen> createState() => _MapScreenState();
// }
//
// class _MapScreenState extends State<MapScreen> with TickerProviderStateMixin {
//   final controller = Get.find<MapController>();
//   final GlobalKey<SliderDrawerState> _sliderKey = GlobalKey<SliderDrawerState>();
//   final SpeechToText _speechToText = SpeechToText();
//   final ConfettiController _confettiController = ConfettiController(duration: const Duration(seconds: 2));
//
//   Set<Marker> customMarkers = {};
//   bool _isListening = false;
//   bool _speechEnabled = false;
//   bool _permissionGranted = false;
//   String _recognizedText = "";
//   double _audioLevel = 0.0;
//   List<double> _audioLevels = List.generate(20, (index) => 0.0);
//   late AnimationController _waveController;
//
//   @override
//   void initState() {
//     super.initState();
//     _waveController = AnimationController(
//       vsync: this,
//       duration: const Duration(milliseconds: 800),
//     )..repeat();
//     _checkAndLoadLocation();
//     _initSpeech();
//   }
//
//   /// ====== Check permissions and request them if necessary
//   Future<void> _checkAndLoadLocation() async {
//     final hasPermission = await _handleLocationPermission();
//     if (hasPermission) {
//       await controller.loadCurrentLocation();
//       _initMarkers();
//     }
//   }
//
//   Future<bool> _handleLocationPermission() async {
//     bool serviceEnabled;
//     LocationPermission permission;
//
//     /// ====== Make sure GPS is enabled
//     serviceEnabled = await Geolocator.isLocationServiceEnabled();
//     if (!serviceEnabled) {
//       AppSnackbar.warning("رجاءً قم بتفعيل خدمة الموقع من الإعدادات.",
//           englishMessage: "Please enable location services from settings.");
//       return false;
//     }
//
//     permission = await Geolocator.checkPermission();
//     if (permission == LocationPermission.denied) {
//       permission = await Geolocator.requestPermission();
//       if (permission == LocationPermission.denied) {
//         AppSnackbar.error("لا يمكن استخدام الخريطة بدون إذن الموقع.",
//             englishMessage:
//             "The map cannot be used without location permission.");
//         return false;
//       }
//     }
//
//     if (permission == LocationPermission.deniedForever) {
//       AppSnackbar.error("رجاءً فعّل إذن الموقع يدويًا من إعدادات الهاتف.",
//           englishMessage:
//           "Please enable location permission manually from the phone settings.");
//       return false;
//     }
//
//     return true;
//   }
//
//   /// Initialize Speech Recognition
//   Future<void> _initSpeech() async {
//     final status = await Permission.microphone.request();
//     if (status.isGranted) {
//       setState(() {
//         _permissionGranted = true;
//       });
//
//       _speechEnabled = await _speechToText.initialize(
//         onStatus: (status) {
//           print('Speech recognition status: $status');
//           if (status == 'notListening' && _isListening) {
//             setState(() {
//               _isListening = false;
//               if (_recognizedText.isNotEmpty) {
//                 _confettiController.play();
//               }
//             });
//           }
//         },
//         onError: (error) {
//           print('Speech recognition error: $error');
//         },
//       );
//       setState(() {});
//     } else {
//       print('Microphone permission denied');
//     }
//   }
//
//   Future<void> _startListening() async {
//     if (!_permissionGranted) {
//       final status = await Permission.microphone.request();
//       if (!status.isGranted) {
//         if (mounted) {
//           ScaffoldMessenger.of(context).showSnackBar(
//             const SnackBar(
//               content: Text('يجب منح إذن استخدام الميكروفون للتمكن من التحدث'),
//             ),
//           );
//         }
//         return;
//       } else {
//         setState(() {
//           _permissionGranted = true;
//         });
//         await _initSpeech();
//       }
//     }
//
//     setState(() {
//       _recognizedText = "";
//     });
//
//     if (_speechEnabled) {
//       await _speechToText.listen(
//         onResult: (result) {
//           setState(() {
//             _recognizedText = result.recognizedWords;
//           });
//         },
//         localeId: "ar-SA",
//         listenMode: ListenMode.confirmation,
//         onSoundLevelChange: (level) {
//           setState(() {
//             _audioLevel = level;
//             _audioLevels.removeAt(0);
//             _audioLevels.add(level);
//           });
//         },
//       );
//       setState(() {
//         _isListening = true;
//       });
//     } else {
//       await _initSpeech();
//       if (_speechEnabled) {
//         await _startListening();
//       }
//     }
//   }
//
//   void _stopListening() async {
//     await _speechToText.stop();
//     setState(() {
//       _isListening = false;
//       if (_recognizedText.isNotEmpty) {
//         _confettiController.play();
//       }
//     });
//   }
//
//   Future<void> _initMarkers() async {
//     final location = controller.currentLocation.value;
//     if (location == null) return;
//
//     final restaurantIcon =
//     await _createCustomMarker(Icons.restaurant, Colors.deepPurple);
//     final cafeIcon =
//     await _createCustomMarker(Icons.local_cafe, Colors.deepPurple);
//     final storeIcon = await _createCustomMarker(Icons.store, Colors.deepPurple);
//
//     setState(() {
//       customMarkers = {
//         Marker(
//           markerId: const MarkerId("restaurant"),
//           position:
//           LatLng(location.latitude + 0.001, location.longitude + 0.001),
//           icon: restaurantIcon,
//           infoWindow: const InfoWindow(title: "مطعم شرقي"),
//         ),
//         Marker(
//           markerId: const MarkerId("cafe"),
//           position:
//           LatLng(location.latitude - 0.001, location.longitude - 0.001),
//           icon: cafeIcon,
//           infoWindow: const InfoWindow(title: "مقهى"),
//         ),
//         Marker(
//           markerId: const MarkerId("store"),
//           position:
//           LatLng(location.latitude + 0.002, location.longitude - 0.001),
//           icon: storeIcon,
//           infoWindow: const InfoWindow(title: "سوبر ماركت"),
//         ),
//       };
//     });
//   }
//
//   /// Create a custom marker
//   Future<BitmapDescriptor> _createCustomMarker(
//       IconData icon, Color background) async {
//     final ui.PictureRecorder recorder = ui.PictureRecorder();
//     final Canvas canvas = Canvas(recorder);
//     const double size = 120;
//
//     final Paint paint = Paint()..color = background;
//     final Path path = Path();
//     path.moveTo(size / 2, size);
//     path.quadraticBezierTo(size, size * 0.6, size / 2, 0);
//     path.quadraticBezierTo(0, size * 0.6, size / 2, size);
//     canvas.drawPath(path, paint);
//
//     final Paint whiteCircle = Paint()..color = Colors.white;
//     canvas.drawCircle(Offset(size / 2, size * 0.45), size * 0.18, whiteCircle);
//
//     final textPainter = TextPainter(
//       text: TextSpan(
//         text: String.fromCharCode(icon.codePoint),
//         style: TextStyle(
//           fontSize: size * 0.25,
//           fontFamily: icon.fontFamily,
//           color: background,
//           package: icon.fontPackage,
//         ),
//       ),
//       textDirection: TextDirection.ltr,
//     );
//     textPainter.layout();
//     textPainter.paint(
//         canvas,
//         Offset((size - textPainter.width) / 2,
//             (size * 0.45 - textPainter.height / 2)));
//
//     final img =
//     await recorder.endRecording().toImage(size.toInt(), size.toInt());
//     final byteData = await img.toByteData(format: ui.ImageByteFormat.png);
//     final Uint8List pngBytes = byteData!.buffer.asUint8List();
//
//     return BitmapDescriptor.fromBytes(pngBytes);
//   }
//
//   @override
//   void dispose() {
//     _waveController.dispose();
//     _confettiController.dispose();
//     _speechToText.stop();
//     super.dispose();
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return SliderDrawer(
//       key: _sliderKey,
//       sliderOpenSize: 250,
//       appBar: null,
//       backgroundColor: ManagerColors.white,
//       slideDirection: SlideDirection.rightToLeft,
//       slider: AppDrawer(
//         sliderKey: _sliderKey,
//         userName: "Osama Ayesh",
//         role: "مستخدم جديد",
//         phone: "0599999999",
//         userItems: [
//           DrawerItemModel(
//             iconPath: ManagerIcons.dollarIcon,
//             title: "المدفوعات",
//             onTap: () => print("فتح المدفوعات"),
//           ),
//           DrawerItemModel(
//             iconPath: ManagerIcons.dollarIcon,
//             title: "الطلبات",
//             onTap: () => print("فتح الطلبات"),
//           ),
//         ],
//         providers: [
//           ProviderSection(
//             name: "مقدم خدمة - أحمد",
//             items: [
//               DrawerItemModel(
//                 iconPath: ManagerIcons.dollarIcon,
//                 title: "الخدمات",
//                 onTap: () => print("خدمات أحمد"),
//               ),
//             ],
//           ),
//           ProviderSection(
//             name: "مقدم خدمة - محمد",
//             items: [
//               DrawerItemModel(
//                 iconPath: ManagerIcons.dollarIcon,
//                 title: "الملف",
//                 onTap: () => print("ملف محمد"),
//               ),
//             ],
//           ),
//         ],
//       ),
//       child: Scaffold(
//         body: Obx(() {
//           if (controller.isLoading.value) {
//             return const LoadingWidget();
//           }
//
//           final location = controller.currentLocation.value;
//           if (location == null) {
//             return LocationErrorWidget(
//               onRetry: _checkAndLoadLocation,
//             );
//           }
//
//           final LatLng currentLatLng =
//           LatLng(location.latitude, location.longitude);
//
//           return Stack(
//             children: [
//               GoogleMap(
//                 initialCameraPosition: CameraPosition(
//                   target: currentLatLng,
//                   zoom: 14,
//                 ),
//                 myLocationEnabled: true,
//                 markers: customMarkers,
//                 trafficEnabled: false,
//                 compassEnabled: false,
//                 buildingsEnabled: false,
//                 mapToolbarEnabled: false,
//                 myLocationButtonEnabled: false,
//                 onMapCreated: (GoogleMapController mapController) async {
//                   String style = await DefaultAssetBundle.of(context)
//                       .loadString('assets/json/style_map.json');
//                   mapController.setMapStyle(style);
//                 },
//               ),
//               Padding(
//                 padding: EdgeInsets.only(
//                   left: ManagerWidth.w16,
//                   right: ManagerWidth.w16,
//                   top: ManagerHeight.h24,
//                 ),
//                 child: Row(
//                   children: [
//                     MenuIconButton(
//                       onPressed: () {
//                         _sliderKey.currentState?.toggle();
//                       },
//                     ),
//                     const Spacer(),
//                     NotificationIconButton(
//                       onPressed: () {},
//                       showDot: true,
//                     ),
//                   ],
//                 ),
//               ),
//               Positioned(
//                 bottom: 24,
//                 left: 0,
//                 right: 0,
//                 child: Center(
//                   child: GestureDetector(
//                     onTap: () => _openVoiceAssistant(context),
//                     child: VoiceAssistantButton(
//                       isListening: _isListening,
//                       audioLevels: _audioLevels,
//                       waveController: _waveController,
//                       onTap: _isListening ? _stopListening : _startListening,
//                     ),
//                   ),
//                 ),
//               ),
//               Align(
//                 alignment: Alignment.topCenter,
//                 child: ConfettiWidget(
//                   confettiController: _confettiController,
//                   blastDirectionality: BlastDirectionality.explosive,
//                   shouldLoop: false,
//                   colors: const [
//                     Colors.green,
//                     Colors.blue,
//                     Colors.pink,
//                     Colors.orange,
//                     Colors.purple
//                   ],
//                 ),
//               ),
//             ],
//           );
//         }),
//       ),
//     );
//   }
//
//   void _openVoiceAssistant(BuildContext context) {
//     showModalBottomSheet(
//       context: context,
//       backgroundColor: ManagerColors.primaryColor,
//       shape: const RoundedRectangleBorder(
//         borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
//       ),
//       isScrollControlled: true,
//       builder: (context) {
//         return VoiceAssistantPanel(
//           isListening: _isListening,
//           recognizedText: _recognizedText,
//           audioLevels: _audioLevels,
//           waveController: _waveController,
//           onStartListening: _startListening,
//           onStopListening: _stopListening,
//         );
//       },
//     );
//   }
// }
//
// class VoiceAssistantButton extends StatelessWidget {
//   final bool isListening;
//   final List<double> audioLevels;
//   final AnimationController waveController;
//   final VoidCallback onTap;
//
//   const VoiceAssistantButton({
//     super.key,
//     required this.isListening,
//     required this.audioLevels,
//     required this.waveController,
//     required this.onTap,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return AnimatedBuilder(
//       animation: waveController,
//       builder: (context, child) {
//         return GestureDetector(
//           onTap: onTap,
//           child: Container(
//             width: 80,
//             height: 80,
//             decoration: BoxDecoration(
//               shape: BoxShape.circle,
//               color: ManagerColors.primaryColor,
//               boxShadow: [
//                 BoxShadow(
//                   color: ManagerColors.primaryColor.withOpacity(0.4),
//                   blurRadius: 10,
//                   spreadRadius: isListening ? 5 : 0,
//                 ),
//               ],
//             ),
//             child: Stack(
//               alignment: Alignment.center,
//               children: [
//                 // Waves based on audio level
//                 ...List.generate(3, (index) {
//                   final progress = ((waveController.value + (index * 0.3)) % 1.0);
//                   final waveSize = 80 + (progress * 40) + (isListening ? audioLevels.isNotEmpty ? audioLevels.last * 0.5 : 0 : 0);
//
//                   return Container(
//                     width: waveSize,
//                     height: waveSize,
//                     decoration: BoxDecoration(
//                       shape: BoxShape.circle,
//                       border: Border.all(
//                         color: ManagerColors.primaryColor.withOpacity((1 - progress) * 0.3),
//                         width: 2,
//                       ),
//                     ),
//                   );
//                 }),
//
//                 // Main icon
//                 Icon(
//                   isListening ? Icons.mic : Icons.mic_none,
//                   color: Colors.white,
//                   size: 36,
//                 ),
//
//                 // Pulsating circle when listening
//                 if (isListening)
//                   Container(
//                     width: 80,
//                     height: 80,
//                     decoration: BoxDecoration(
//                       shape: BoxShape.circle,
//                       color: ManagerColors.primaryColor.withOpacity(0.2),
//                     ),
//                   ),
//               ],
//             ),
//           ),
//         );
//       },
//     );
//   }
// }
//
// class VoiceAssistantPanel extends StatefulWidget {
//   final bool isListening;
//   final String recognizedText;
//   final List<double> audioLevels;
//   final AnimationController waveController;
//   final VoidCallback onStartListening;
//   final VoidCallback onStopListening;
//
//   const VoiceAssistantPanel({
//     super.key,
//     required this.isListening,
//     required this.recognizedText,
//     required this.audioLevels,
//     required this.waveController,
//     required this.onStartListening,
//     required this.onStopListening,
//   });
//
//   @override
//   State<VoiceAssistantPanel> createState() => _VoiceAssistantPanelState();
// }
//
// class _VoiceAssistantPanelState extends State<VoiceAssistantPanel> {
//   @override
//   Widget build(BuildContext context) {
//     return Container(
//       padding: const EdgeInsets.all(24),
//       height: MediaQuery.of(context).size.height * 0.7,
//       decoration: BoxDecoration(
//         color: ManagerColors.primaryColor,
//         borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
//       ),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.start,
//         children: [
//           Row(
//             mainAxisAlignment: MainAxisAlignment.spaceBetween,
//             children: [
//               IconButton(
//                 icon: const Icon(Icons.close, color: Colors.white),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               Text(
//                 "المساعد الصوتي",
//                 style: getBoldTextStyle(
//                   fontSize: ManagerFontSize.s18,
//                   color: Colors.white,
//                 ),
//               ),
//               IconButton(
//                 icon: const Icon(Icons.open_in_full, color: Colors.white),
//                 onPressed: () {},
//               ),
//             ],
//           ),
//
//           const SizedBox(height: 20),
//
//           Expanded(
//             child: Container(
//               padding: const EdgeInsets.all(16),
//               decoration: BoxDecoration(
//                 color: Colors.white.withOpacity(0.1),
//                 borderRadius: BorderRadius.circular(16),
//               ),
//               child: Column(
//                 children: [
//                   if (widget.recognizedText.isNotEmpty)
//                     Text(
//                       widget.recognizedText,
//                       style: getRegularTextStyle(
//                         fontSize: ManagerFontSize.s16,
//                         color: Colors.white,
//                       ),
//                       textAlign: TextAlign.center,
//                     )
//                   else
//                     Text(
//                       "تمام، خليني أضبطلك الأطيب.. بس قبل هيك بتحب تختار من الجري والسلطات، ولا نفسك بالأكل الشرقي المشبع؟",
//                       style: getRegularTextStyle(
//                         fontSize: ManagerFontSize.s14,
//                         color: Colors.white,
//                       ),
//                       textAlign: TextAlign.center,
//                     ),
//
//                   const Spacer(),
//
//                   // Visual audio level indicator
//                   if (widget.isListening)
//                     Row(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: List.generate(10, (index) {
//                         final level = widget.audioLevels.isNotEmpty
//                             ? widget.audioLevels[widget.audioLevels.length - 1 - (index % widget.audioLevels.length)]
//                             : 0.0;
//                         final height = 10 + (level * 0.5);
//
//                         return Container(
//                           width: 4,
//                           height: height,
//                           margin: const EdgeInsets.symmetric(horizontal: 2),
//                           decoration: BoxDecoration(
//                             color: Colors.white,
//                             borderRadius: BorderRadius.circular(2),
//                           ),
//                         );
//                       }),
//                     ),
//
//                   const SizedBox(height: 20),
//
//                   // Animated mic button
//                   GestureDetector(
//                     onTap: widget.isListening ? widget.onStopListening : widget.onStartListening,
//                     child: AnimatedBuilder(
//                       animation: widget.waveController,
//                       builder: (context, child) {
//                         return Container(
//                           width: 80,
//                           height: 80,
//                           decoration: BoxDecoration(
//                             shape: BoxShape.circle,
//                             color: Colors.white,
//                             boxShadow: [
//                               BoxShadow(
//                                 color: Colors.white.withOpacity(0.4),
//                                 blurRadius: 10,
//                                 spreadRadius: widget.isListening ? 8 : 0,
//                               ),
//                             ],
//                           ),
//                           child: Stack(
//                             alignment: Alignment.center,
//                             children: [
//                               // Waves based on audio level
//                               if (widget.isListening)
//                                 ...List.generate(3, (index) {
//                                   final progress = ((widget.waveController.value + (index * 0.3)) % 1.0);
//                                   final waveSize = 80 + (progress * 60) + (widget.audioLevels.isNotEmpty ? widget.audioLevels.last * 0.8 : 0);
//
//                                   return Container(
//                                     width: waveSize,
//                                     height: waveSize,
//                                     decoration: BoxDecoration(
//                                       shape: BoxShape.circle,
//                                       border: Border.all(
//                                         color: Colors.white.withOpacity((1 - progress) * 0.2),
//                                         width: 2,
//                                       ),
//                                     ),
//                                   );
//                                 }),
//
//                               Icon(
//                                 widget.isListening ? Icons.mic : Icons.mic_none,
//                                 color: ManagerColors.primaryColor,
//                                 size: 36,
//                               ),
//                             ],
//                           ),
//                         );
//                       },
//                     ),
//                   ),
//
//                   const SizedBox(height: 16),
//
//                   Text(
//                     widget.isListening ? "جاري الاستماع..." : "انقر للتحدث",
//                     style: getRegularTextStyle(
//                       fontSize: ManagerFontSize.s14,
//                       color: Colors.white,
//                     ),
//                   ),
//                 ],
//               ),
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }
//
//
//
//
//
// // import 'dart:typed_data';
// // import 'dart:ui' as ui;
// // import 'package:app_mobile/core/resources/manager_height.dart';
// // import 'package:app_mobile/core/resources/manager_icons.dart';
// // import 'package:app_mobile/core/resources/manager_width.dart';
// // import 'package:app_mobile/core/util/snack_bar.dart';
// // import 'package:flutter/material.dart';
// // import 'package:get/get.dart';
// // import 'package:google_maps_flutter/google_maps_flutter.dart';
// // import 'package:geolocator/geolocator.dart';
// // import 'package:flutter_slider_drawer/flutter_slider_drawer.dart';
// //
// // import '../../../../../core/resources/manager_colors.dart';
// // import '../../../../../core/resources/manager_font_size.dart';
// // import '../../../../../core/resources/manager_styles.dart';
// // import '../../../../../core/widgets/loading_widget.dart';
// // import '../controller/map_controller.dart';
// // import '../widgets/drawer_widget.dart';
// // import '../widgets/location_error_widget.dart';
// // import '../widgets/menu_icon_button.dart';
// // import '../widgets/notfication_icon_button.dart';
// //
// // class MapScreen extends StatefulWidget {
// //   const MapScreen({super.key});
// //
// //   @override
// //   State<MapScreen> createState() => _MapScreenState();
// // }
// //
// // class _MapScreenState extends State<MapScreen> {
// //   final controller = Get.find<MapController>();
// //   final GlobalKey<SliderDrawerState> _sliderKey =
// //       GlobalKey<SliderDrawerState>();
// //
// //   Set<Marker> customMarkers = {};
// //
// //   @override
// //   void initState() {
// //     super.initState();
// //     _checkAndLoadLocation();
// //   }
// //
// //   /// ====== Check permissions and request them if necessary
// //   Future<void> _checkAndLoadLocation() async {
// //     final hasPermission = await _handleLocationPermission();
// //     if (hasPermission) {
// //       await controller.loadCurrentLocation();
// //       _initMarkers();
// //     }
// //   }
// //
// //   Future<bool> _handleLocationPermission() async {
// //     bool serviceEnabled;
// //     LocationPermission permission;
// //
// //     /// ====== Make sure GPS is enabled
// //     serviceEnabled = await Geolocator.isLocationServiceEnabled();
// //     if (!serviceEnabled) {
// //       AppSnackbar.warning("رجاءً قم بتفعيل خدمة الموقع من الإعدادات.",
// //           englishMessage: "Please enable location services from settings.");
// //       return false;
// //     }
// //
// //     permission = await Geolocator.checkPermission();
// //     if (permission == LocationPermission.denied) {
// //       permission = await Geolocator.requestPermission();
// //       if (permission == LocationPermission.denied) {
// //         AppSnackbar.error("لا يمكن استخدام الخريطة بدون إذن الموقع.",
// //             englishMessage:
// //                 "The map cannot be used without location permission.");
// //         return false;
// //       }
// //     }
// //
// //     if (permission == LocationPermission.deniedForever) {
// //       AppSnackbar.error("رجاءً فعّل إذن الموقع يدويًا من إعدادات الهاتف.",
// //           englishMessage:
// //               "Please enable location permission manually from the phone settings.");
// //       return false;
// //     }
// //
// //     return true;
// //   }
// //
// //   Future<void> _initMarkers() async {
// //     final location = controller.currentLocation.value;
// //     if (location == null) return;
// //
// //     final restaurantIcon =
// //         await _createCustomMarker(Icons.restaurant, Colors.deepPurple);
// //     final cafeIcon =
// //         await _createCustomMarker(Icons.local_cafe, Colors.deepPurple);
// //     final storeIcon = await _createCustomMarker(Icons.store, Colors.deepPurple);
// //
// //     setState(() {
// //       customMarkers = {
// //         Marker(
// //           markerId: const MarkerId("restaurant"),
// //           position:
// //               LatLng(location.latitude + 0.001, location.longitude + 0.001),
// //           icon: restaurantIcon,
// //           infoWindow: const InfoWindow(title: "مطعم شرقي"),
// //         ),
// //         Marker(
// //           markerId: const MarkerId("cafe"),
// //           position:
// //               LatLng(location.latitude - 0.001, location.longitude - 0.001),
// //           icon: cafeIcon,
// //           infoWindow: const InfoWindow(title: "مقهى"),
// //         ),
// //         Marker(
// //           markerId: const MarkerId("store"),
// //           position:
// //               LatLng(location.latitude + 0.002, location.longitude - 0.001),
// //           icon: storeIcon,
// //           infoWindow: const InfoWindow(title: "سوبر ماركت"),
// //         ),
// //       };
// //     });
// //   }
// //
// //   /// Create a custom marker
// //   Future<BitmapDescriptor> _createCustomMarker(
// //       IconData icon, Color background) async {
// //     final ui.PictureRecorder recorder = ui.PictureRecorder();
// //     final Canvas canvas = Canvas(recorder);
// //     const double size = 120;
// //
// //     final Paint paint = Paint()..color = background;
// //     final Path path = Path();
// //     path.moveTo(size / 2, size);
// //     path.quadraticBezierTo(size, size * 0.6, size / 2, 0);
// //     path.quadraticBezierTo(0, size * 0.6, size / 2, size);
// //     canvas.drawPath(path, paint);
// //
// //     final Paint whiteCircle = Paint()..color = Colors.white;
// //     canvas.drawCircle(Offset(size / 2, size * 0.45), size * 0.18, whiteCircle);
// //
// //     final textPainter = TextPainter(
// //       text: TextSpan(
// //         text: String.fromCharCode(icon.codePoint),
// //         style: TextStyle(
// //           fontSize: size * 0.25,
// //           fontFamily: icon.fontFamily,
// //           color: background,
// //           package: icon.fontPackage,
// //         ),
// //       ),
// //       textDirection: TextDirection.ltr,
// //     );
// //     textPainter.layout();
// //     textPainter.paint(
// //         canvas,
// //         Offset((size - textPainter.width) / 2,
// //             (size * 0.45 - textPainter.height / 2)));
// //
// //     final img =
// //         await recorder.endRecording().toImage(size.toInt(), size.toInt());
// //     final byteData = await img.toByteData(format: ui.ImageByteFormat.png);
// //     final Uint8List pngBytes = byteData!.buffer.asUint8List();
// //
// //     return BitmapDescriptor.fromBytes(pngBytes);
// //   }
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return SliderDrawer(
// //       key: _sliderKey,
// //       sliderOpenSize: 250,
// //       appBar: null,
// //       backgroundColor: ManagerColors.white,
// //
// //       slideDirection: SlideDirection.rightToLeft,
// //       slider: AppDrawer(
// //         sliderKey: _sliderKey,
// //         userName: "Osama Ayesh",
// //         role: "مستخدم جديد",
// //         phone: "0599999999",
// //         userItems: [
// //           DrawerItemModel(
// //             iconPath: ManagerIcons.dollarIcon,
// //             title: "المدفوعات",
// //             onTap: () => print("فتح المدفوعات"),
// //           ),
// //           DrawerItemModel(
// //             iconPath: ManagerIcons.dollarIcon,
// //             title: "الطلبات",
// //             onTap: () => print("فتح الطلبات"),
// //           ),
// //         ],
// //         providers: [
// //           ProviderSection(
// //             name: "مقدم خدمة - أحمد",
// //             items: [
// //               DrawerItemModel(
// //                 iconPath: ManagerIcons.dollarIcon,
// //                 title: "الخدمات",
// //                 onTap: () => print("خدمات أحمد"),
// //               ),
// //             ],
// //           ),
// //           ProviderSection(
// //             name: "مقدم خدمة - محمد",
// //             items: [
// //               DrawerItemModel(
// //                 iconPath: ManagerIcons.dollarIcon,
// //                 title: "الملف",
// //                 onTap: () => print("ملف محمد"),
// //               ),
// //             ],
// //           ),
// //         ],
// //       ),
// //       child: Scaffold(
// //         body: Obx(() {
// //           if (controller.isLoading.value) {
// //             return const LoadingWidget();
// //           }
// //
// //           final location = controller.currentLocation.value;
// //           if (location == null) {
// //             return LocationErrorWidget(
// //               onRetry: _checkAndLoadLocation,
// //             );
// //           }
// //
// //           final LatLng currentLatLng =
// //               LatLng(location.latitude, location.longitude);
// //
// //           return SafeArea(
// //             child: Stack(
// //               children: [
// //                 GoogleMap(
// //                   initialCameraPosition: CameraPosition(
// //                     target: currentLatLng,
// //                     zoom: 14,
// //                   ),
// //                   myLocationEnabled: true,
// //                   markers: customMarkers,
// //                   trafficEnabled: false,
// //                   compassEnabled: false,
// //                   buildingsEnabled: false,
// //                   mapToolbarEnabled: false,
// //                   myLocationButtonEnabled: false,
// //                   onMapCreated: (GoogleMapController mapController) async {
// //                     String style = await DefaultAssetBundle.of(context)
// //                         .loadString('assets/json/style_map.json');
// //                     mapController.setMapStyle(style);
// //                   },
// //                 ),
// //                 Padding(
// //                   padding: EdgeInsets.only(
// //                     left: ManagerWidth.w16,
// //                     right: ManagerWidth.w16,
// //                     top: ManagerHeight.h24,
// //                   ),
// //                   child: Row(
// //                     children: [
// //                       MenuIconButton(
// //                         onPressed: () {
// //                           _sliderKey.currentState?.toggle();
// //                         },
// //                       ),
// //                       const Spacer(),
// //                       NotificationIconButton(
// //                         onPressed: () {},
// //                         showDot: true,
// //                       ),
// //                     ],
// //                   ),
// //                 ),
// //                 Positioned(
// //                   bottom: 24,
// //                   left: 0,
// //                   right: 0,
// //                   child: Center(
// //                     child: GestureDetector(
// //                       onTap: () => _openVoiceAssistant(context),
// //                       child: const SiriMicButton(),
// //                     ),
// //                   ),
// //                 ),
// //               ],
// //             ),
// //           );
// //         }),
// //       ),
// //     );
// //   }
// //
// //   void _openVoiceAssistant(BuildContext context) {
// //     showModalBottomSheet(
// //       context: context,
// //       backgroundColor: ManagerColors.primaryColor,
// //       shape: const RoundedRectangleBorder(
// //         borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
// //       ),
// //       builder: (context) {
// //         return Container(
// //           padding: const EdgeInsets.all(16),
// //           height: 220,
// //           child: Column(
// //             crossAxisAlignment: CrossAxisAlignment.start,
// //             children: [
// //               const Row(
// //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //                 children: [
// //                   Icon(Icons.close, color: Colors.white),
// //                   Icon(Icons.open_in_full, color: Colors.white),
// //                 ],
// //               ),
// //               const SizedBox(height: 12),
// //               Text(
// //                 "تمام، خليني أضبطلك الأطيب.. بس قبل هيك بتحب تختار من الجري والسلطات، ولا نفسك بالأكل الشرقي المشبع؟",
// //                 style: getRegularTextStyle(
// //                   fontSize: ManagerFontSize.s12,
// //                   color: Colors.white,
// //                 ),
// //               ),
// //               const Spacer(),
// //               const Center(child: SiriMicButton(size: 60)),
// //             ],
// //           ),
// //         );
// //       },
// //     );
// //   }
// // }
// //
// //
// // class SiriMicButton extends StatefulWidget {
// //   final double size;
// //
// //   const SiriMicButton({super.key, this.size = 80});
// //
// //   @override
// //   State<SiriMicButton> createState() => _SiriMicButtonState();
// // }
// //
// // class _SiriMicButtonState extends State<SiriMicButton>
// //     with SingleTickerProviderStateMixin {
// //   late AnimationController _controller;
// //
// //   @override
// //   void initState() {
// //     super.initState();
// //     _controller = AnimationController(
// //       vsync: this,
// //       duration: const Duration(seconds: 2),
// //     )..repeat();
// //   }
// //
// //   @override
// //   void dispose() {
// //     _controller.dispose();
// //     super.dispose();
// //   }
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return AnimatedBuilder(
// //       animation: _controller,
// //       builder: (context, child) {
// //         return SizedBox(
// //           width: widget.size * 2,
// //           height: widget.size * 2,
// //           child: Stack(
// //             alignment: Alignment.center,
// //             children: [
// //               /// ===== Waves (animated circles like Siri)
// //               ...List.generate(3, (index) {
// //                 double progress =
// //                     (_controller.value + (index * 0.3)) % 1.0; // waves offset
// //                 double scale = 1 + (progress * 1.5);
// //                 double opacity = (1 - progress).clamp(0.0, 1.0);
// //
// //                 return Opacity(
// //                   opacity: opacity,
// //                   child: Container(
// //                     width: widget.size * scale,
// //                     height: widget.size * scale,
// //                     decoration: BoxDecoration(
// //                       shape: BoxShape.circle,
// //                       color: ManagerColors.primaryColor.withOpacity(0.3),
// //                     ),
// //                   ),
// //                 );
// //               }),
// //
// //               /// ============ Main microphone button
// //               Container(
// //                 width: widget.size,
// //                 height: widget.size,
// //                 decoration: const BoxDecoration(
// //                   shape: BoxShape.circle,
// //                   color: ManagerColors.primaryColor,
// //                 ),
// //                 child: const Icon(Icons.mic, color: Colors.white, size: 36),
// //               ),
// //             ],
// //           ),
// //         );
// //       },
// //     );
// //   }
// // }
// // // import 'dart:typed_data';
// // // import 'dart:ui' as ui;
// // // import 'package:app_mobile/core/resources/manager_height.dart';
// // // import 'package:app_mobile/core/resources/manager_width.dart';
// // // import 'package:app_mobile/core/util/snack_bar.dart';
// // // import 'package:flutter/material.dart';
// // // import 'package:get/get.dart';
// // // import 'package:google_maps_flutter/google_maps_flutter.dart';
// // // import 'package:geolocator/geolocator.dart';
// // //
// // // import '../../../../../core/resources/manager_colors.dart';
// // // import '../../../../../core/resources/manager_font_size.dart';
// // // import '../../../../../core/resources/manager_styles.dart';
// // // import '../../../../../core/widgets/loading_widget.dart';
// // // import '../controller/map_controller.dart';
// // // import '../widgets/location_error_widget.dart';
// // // import '../widgets/menu_icon_button.dart';
// // // import '../widgets/notfication_icon_button.dart';
// // //
// // // class MapScreen extends StatefulWidget {
// // //   const MapScreen({super.key});
// // //
// // //   @override
// // //   State<MapScreen> createState() => _MapScreenState();
// // // }
// // //
// // // class _MapScreenState extends State<MapScreen> {
// // //   final controller = Get.find<MapController>();
// // //   Set<Marker> customMarkers = {};
// // //
// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     _checkAndLoadLocation();
// // //   }
// // //
// // //   /// ====== Check permissions and request them if necessary
// // //   Future<void> _checkAndLoadLocation() async {
// // //     final hasPermission = await _handleLocationPermission();
// // //     if (hasPermission) {
// // //       await controller.loadCurrentLocation();
// // //       _initMarkers();
// // //     }
// // //   }
// // //
// // //   Future<bool> _handleLocationPermission() async {
// // //     bool serviceEnabled;
// // //     LocationPermission permission;
// // //
// // //     /// ====== Make sure GPS is enabled
// // //     serviceEnabled = await Geolocator.isLocationServiceEnabled();
// // //     if (!serviceEnabled) {
// // //       AppSnackbar.warning("رجاءً قم بتفعيل خدمة الموقع من الإعدادات.",
// // //           englishMessage: "Please enable location services from settings.");
// // //       return false;
// // //     }
// // //
// // //     permission = await Geolocator.checkPermission();
// // //     if (permission == LocationPermission.denied) {
// // //       permission = await Geolocator.requestPermission();
// // //       if (permission == LocationPermission.denied) {
// // //         AppSnackbar.error("لا يمكن استخدام الخريطة بدون إذن الموقع.",
// // //             englishMessage:
// // //                 "The map cannot be used without location permission.");
// // //         return false;
// // //       }
// // //     }
// // //
// // //     if (permission == LocationPermission.deniedForever) {
// // //       AppSnackbar.error("رجاءً فعّل إذن الموقع يدويًا من إعدادات الهاتف.",
// // //           englishMessage:
// // //               "Please enable location permission manually from the phone settings.");
// // //       return false;
// // //     }
// // //
// // //     return true;
// // //   }
// // //
// // //   Future<void> _initMarkers() async {
// // //     final location = controller.currentLocation.value;
// // //     if (location == null) return;
// // //
// // //     final restaurantIcon =
// // //         await _createCustomMarker(Icons.restaurant, Colors.deepPurple);
// // //     final cafeIcon =
// // //         await _createCustomMarker(Icons.local_cafe, Colors.deepPurple);
// // //     final storeIcon = await _createCustomMarker(Icons.store, Colors.deepPurple);
// // //
// // //     setState(() {
// // //       customMarkers = {
// // //         Marker(
// // //           markerId: const MarkerId("restaurant"),
// // //           position:
// // //               LatLng(location.latitude + 0.001, location.longitude + 0.001),
// // //           icon: restaurantIcon,
// // //           infoWindow: const InfoWindow(title: "مطعم شرقي"),
// // //         ),
// // //         Marker(
// // //           markerId: const MarkerId("cafe"),
// // //           position:
// // //               LatLng(location.latitude - 0.001, location.longitude - 0.001),
// // //           icon: cafeIcon,
// // //           infoWindow: const InfoWindow(title: "مقهى"),
// // //         ),
// // //         Marker(
// // //           markerId: const MarkerId("store"),
// // //           position:
// // //               LatLng(location.latitude + 0.002, location.longitude - 0.001),
// // //           icon: storeIcon,
// // //           infoWindow: const InfoWindow(title: "سوبر ماركت"),
// // //         ),
// // //       };
// // //     });
// // //   }
// // //
// // //  /// Create a custom marker
// // //   Future<BitmapDescriptor> _createCustomMarker(
// // //       IconData icon, Color background) async {
// // //     final ui.PictureRecorder recorder = ui.PictureRecorder();
// // //     final Canvas canvas = Canvas(recorder);
// // //     const double size = 120;
// // //
// // //     final Paint paint = Paint()..color = background;
// // //     final Path path = Path();
// // //     path.moveTo(size / 2, size);
// // //     path.quadraticBezierTo(size, size * 0.6, size / 2, 0);
// // //     path.quadraticBezierTo(0, size * 0.6, size / 2, size);
// // //     canvas.drawPath(path, paint);
// // //
// // //     final Paint whiteCircle = Paint()..color = Colors.white;
// // //     canvas.drawCircle(Offset(size / 2, size * 0.45), size * 0.18, whiteCircle);
// // //
// // //     final textPainter = TextPainter(
// // //       text: TextSpan(
// // //         text: String.fromCharCode(icon.codePoint),
// // //         style: TextStyle(
// // //           fontSize: size * 0.25,
// // //           fontFamily: icon.fontFamily,
// // //           color: background,
// // //           package: icon.fontPackage,
// // //         ),
// // //       ),
// // //       textDirection: TextDirection.ltr,
// // //     );
// // //     textPainter.layout();
// // //     textPainter.paint(
// // //         canvas,
// // //         Offset((size - textPainter.width) / 2,
// // //             (size * 0.45 - textPainter.height / 2)));
// // //
// // //     final img =
// // //         await recorder.endRecording().toImage(size.toInt(), size.toInt());
// // //     final byteData = await img.toByteData(format: ui.ImageByteFormat.png);
// // //     final Uint8List pngBytes = byteData!.buffer.asUint8List();
// // //
// // //     return BitmapDescriptor.fromBytes(pngBytes);
// // //   }
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Scaffold(
// // //       body: Obx(() {
// // //         if (controller.isLoading.value) {
// // //           return const LoadingWidget();
// // //         }
// // //
// // //         final location = controller.currentLocation.value;
// // //         if (location == null) {
// // //           return LocationErrorWidget(
// // //             onRetry: _checkAndLoadLocation,
// // //           );
// // //         }
// // //
// // //         final LatLng currentLatLng =
// // //             LatLng(location.latitude, location.longitude);
// // //
// // //         return SafeArea(
// // //           child: Stack(
// // //             children: [
// // //               GoogleMap(
// // //                 initialCameraPosition: CameraPosition(
// // //                   target: currentLatLng,
// // //                   zoom: 14,
// // //                 ),
// // //                 myLocationEnabled: true,
// // //                 markers: customMarkers,
// // //                 trafficEnabled: false,
// // //                 compassEnabled: false,
// // //                 buildingsEnabled: false,
// // //                 mapToolbarEnabled: false,
// // //                 myLocationButtonEnabled: false,
// // //                 onMapCreated: (GoogleMapController mapController) async {
// // //                   String style = await DefaultAssetBundle.of(context)
// // //                       .loadString('assets/json/style_map.json');
// // //                   mapController.setMapStyle(style);
// // //                 },
// // //               ),
// // //               Padding(
// // //                 padding: EdgeInsets.only(
// // //                   left: ManagerWidth.w16,
// // //                   right: ManagerWidth.w16,
// // //                   top: ManagerHeight.h24,
// // //                 ),
// // //                 child: Row(
// // //                   children: [
// // //                     MenuIconButton(onPressed: () {
// // //
// // //                     }),
// // //                     const Spacer(),
// // //                     NotificationIconButton(
// // //                       onPressed: () {},
// // //                       showDot: true,
// // //                     ),
// // //                   ],
// // //                 ),
// // //               ),
// // //               Positioned(
// // //                 bottom: 24,
// // //                 left: 0,
// // //                 right: 0,
// // //                 child: Center(
// // //                   child: GestureDetector(
// // //                     onTap: () => _openVoiceAssistant(context),
// // //                     child: const SiriMicButton(),
// // //                   ),
// // //                 ),
// // //               ),
// // //             ],
// // //           ),
// // //         );
// // //       }),
// // //     );
// // //   }
// // //
// // //   void _openVoiceAssistant(BuildContext context) {
// // //     showModalBottomSheet(
// // //       context: context,
// // //       backgroundColor: ManagerColors.primaryColor,
// // //       shape: const RoundedRectangleBorder(
// // //         borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
// // //       ),
// // //       builder: (context) {
// // //         return Container(
// // //           padding: const EdgeInsets.all(16),
// // //           height: 220,
// // //           child: Column(
// // //             crossAxisAlignment: CrossAxisAlignment.start,
// // //             children: [
// // //               const Row(
// // //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// // //                 children: [
// // //                   Icon(Icons.close, color: Colors.white),
// // //                   Icon(Icons.open_in_full, color: Colors.white),
// // //                 ],
// // //               ),
// // //               const SizedBox(height: 12),
// // //               Text(
// // //                 "تمام، خليني أضبطلك الأطيب.. بس قبل هيك بتحب تختار من الجري والسلطات، ولا نفسك بالأكل الشرقي المشبع؟",
// // //                 style: getRegularTextStyle(
// // //                   fontSize: ManagerFontSize.s12,
// // //                   color: Colors.white,
// // //                 ),
// // //               ),
// // //               const Spacer(),
// // //               const Center(child: SiriMicButton(size: 60)),
// // //             ],
// // //           ),
// // //         );
// // //       },
// // //     );
// // //   }
// // // }
// // //















// import 'dart:typed_data';
// import 'dart:ui' as ui;
// import 'package:app_mobile/core/resources/manager_height.dart';
// import 'package:app_mobile/core/resources/manager_icons.dart';
// import 'package:app_mobile/core/resources/manager_width.dart';
// import 'package:app_mobile/core/util/snack_bar.dart';
// import 'package:flutter/material.dart';
// import 'package:get/get.dart';
// import 'package:google_maps_flutter/google_maps_flutter.dart';
// import 'package:geolocator/geolocator.dart';
// import 'package:flutter_slider_drawer/flutter_slider_drawer.dart';
// import 'package:speech_to_text/speech_to_text.dart';
// import 'package:permission_handler/permission_handler.dart';
// import 'package:confetti/confetti.dart';
//
// import '../../../../../core/resources/manager_colors.dart';
// import '../../../../../core/resources/manager_font_size.dart';
// import '../../../../../core/resources/manager_styles.dart';
// import '../../../../../core/widgets/loading_widget.dart';
// import '../controller/map_controller.dart';
// import '../widgets/drawer_widget.dart';
// import '../widgets/location_error_widget.dart';
// import '../widgets/manager_drawer_items.dart';
// import '../widgets/menu_icon_button.dart';
// import '../widgets/notfication_icon_button.dart';
//
// class MapScreen extends StatefulWidget {
//   const MapScreen({super.key});
//
//   @override
//   State<MapScreen> createState() => _MapScreenState();
// }
//
// class _MapScreenState extends State<MapScreen> with TickerProviderStateMixin {
//   final controller = Get.find<MapController>();
//   final GlobalKey<SliderDrawerState> _sliderKey = GlobalKey<SliderDrawerState>();
//   final SpeechToText _speechToText = SpeechToText();
//   final ConfettiController _confettiController =
//   ConfettiController(duration: const Duration(seconds: 2));
//
//   Set<Marker> customMarkers = {};
//   bool _isListening = false;
//   bool _speechEnabled = false;
//   bool _permissionGranted = false;
//   String _recognizedText = "";
//   double _audioLevel = 0.0;
//   List<double> _audioLevels = List.generate(20, (index) => 0.0);
//   late AnimationController _waveController;
//   bool _showVoiceAssistant = false;
//
//   @override
//   void initState() {
//     super.initState();
//     _waveController = AnimationController(
//       vsync: this,
//       duration: const Duration(milliseconds: 800),
//     )..repeat();
//     _checkAndLoadLocation();
//     _initSpeech();
//   }
//
//   /// ====== Check permissions and request them if necessary
//   Future<void> _checkAndLoadLocation() async {
//     final hasPermission = await _handleLocationPermission();
//     if (hasPermission) {
//       await controller.loadCurrentLocation();
//       _initMarkers();
//     }
//   }
//
//   Future<bool> _handleLocationPermission() async {
//     bool serviceEnabled;
//     LocationPermission permission;
//
//     serviceEnabled = await Geolocator.isLocationServiceEnabled();
//     if (!serviceEnabled) {
//       AppSnackbar.warning("رجاءً قم بتفعيل خدمة الموقع من الإعدادات.",
//           englishMessage: "Please enable location services from settings.");
//       return false;
//     }
//
//     permission = await Geolocator.checkPermission();
//     if (permission == LocationPermission.denied) {
//       permission = await Geolocator.requestPermission();
//       if (permission == LocationPermission.denied) {
//         AppSnackbar.error("لا يمكن استخدام الخريطة بدون إذن الموقع.",
//             englishMessage:
//             "The map cannot be used without location permission.");
//         return false;
//       }
//     }
//
//     if (permission == LocationPermission.deniedForever) {
//       AppSnackbar.error("رجاءً فعّل إذن الموقع يدويًا من إعدادات الهاتف.",
//           englishMessage:
//           "Please enable location permission manually from the phone settings.");
//       return false;
//     }
//
//     return true;
//   }
//
//   /// Initialize Speech Recognition
//   Future<void> _initSpeech() async {
//     final status = await Permission.microphone.request();
//     if (status.isGranted) {
//       setState(() {
//         _permissionGranted = true;
//       });
//
//       _speechEnabled = await _speechToText.initialize(
//         onStatus: (status) {
//           if (status == 'notListening' && _isListening) {
//             setState(() {
//               _isListening = false;
//               if (_recognizedText.isNotEmpty) {
//                 _confettiController.play();
//               }
//             });
//           }
//         },
//         onError: (error) {
//           print('Speech recognition error: $error');
//         },
//       );
//       setState(() {});
//     } else {
//       print('Microphone permission denied');
//     }
//   }
//
//   Future<void> _startListening() async {
//     if (!_permissionGranted) {
//       final status = await Permission.microphone.request();
//       if (!status.isGranted) {
//         if (mounted) {
//           ScaffoldMessenger.of(context).showSnackBar(
//             const SnackBar(
//               content: Text('يجب منح إذن استخدام الميكروفون للتمكن من التحدث'),
//             ),
//           );
//         }
//         return;
//       } else {
//         setState(() {
//           _permissionGranted = true;
//         });
//         await _initSpeech();
//       }
//     }
//
//     setState(() {
//       _recognizedText = "";
//       _showVoiceAssistant = true;
//     });
//
//     if (_speechEnabled) {
//       await _speechToText.listen(
//         onResult: (result) {
//           setState(() {
//             _recognizedText = result.recognizedWords;
//           });
//         },
//         localeId: "ar-SA",
//         listenMode: ListenMode.confirmation,
//         onSoundLevelChange: (level) {
//           setState(() {
//             _audioLevel = level;
//             _audioLevels.removeAt(0);
//             _audioLevels.add(level);
//           });
//         },
//       );
//       setState(() {
//         _isListening = true;
//       });
//     } else {
//       await _initSpeech();
//       if (_speechEnabled) {
//         await _startListening();
//       }
//     }
//   }
//
//   void _stopListening() async {
//     await _speechToText.stop();
//     setState(() {
//       _isListening = false;
//       if (_recognizedText.isNotEmpty) {
//         _confettiController.play();
//       }
//     });
//   }
//
//   void _closeVoiceAssistant() {
//     setState(() {
//       _showVoiceAssistant = false;
//     });
//     _stopListening();
//   }
//
//   Future<void> _initMarkers() async {
//     final location = controller.currentLocation.value;
//     if (location == null) return;
//
//     final restaurantIcon =
//     await _createCustomMarker(Icons.restaurant, Colors.deepPurple);
//     final cafeIcon =
//     await _createCustomMarker(Icons.local_cafe, Colors.deepPurple);
//     final storeIcon =
//     await _createCustomMarker(Icons.store, Colors.deepPurple);
//
//     setState(() {
//       customMarkers = {
//         Marker(
//           markerId: const MarkerId("restaurant"),
//           position:
//           LatLng(location.latitude + 0.001, location.longitude + 0.001),
//           icon: restaurantIcon,
//           infoWindow: const InfoWindow(title: "مطعم شرقي"),
//         ),
//         Marker(
//           markerId: const MarkerId("cafe"),
//           position:
//           LatLng(location.latitude - 0.001, location.longitude - 0.001),
//           icon: cafeIcon,
//           infoWindow: const InfoWindow(title: "مقهى"),
//         ),
//         Marker(
//           markerId: const MarkerId("store"),
//           position:
//           LatLng(location.latitude + 0.002, location.longitude - 0.001),
//           icon: storeIcon,
//           infoWindow: const InfoWindow(title: "سوبر ماركت"),
//         ),
//       };
//     });
//   }
//
//   Future<BitmapDescriptor> _createCustomMarker(
//       IconData icon, Color background) async {
//     final ui.PictureRecorder recorder = ui.PictureRecorder();
//     final Canvas canvas = Canvas(recorder);
//     const double size = 120;
//
//     final Paint paint = Paint()..color = background;
//     final Path path = Path();
//     path.moveTo(size / 2, size);
//     path.quadraticBezierTo(size, size * 0.6, size / 2, 0);
//     path.quadraticBezierTo(0, size * 0.6, size / 2, size);
//     canvas.drawPath(path, paint);
//
//     final Paint whiteCircle = Paint()..color = Colors.white;
//     canvas.drawCircle(Offset(size / 2, size * 0.45), size * 0.18, whiteCircle);
//
//     final textPainter = TextPainter(
//       text: TextSpan(
//         text: String.fromCharCode(icon.codePoint),
//         style: TextStyle(
//           fontSize: size * 0.25,
//           fontFamily: icon.fontFamily,
//           color: background,
//           package: icon.fontPackage,
//         ),
//       ),
//       textDirection: TextDirection.ltr,
//     );
//     textPainter.layout();
//     textPainter.paint(
//         canvas,
//         Offset((size - textPainter.width) / 2,
//             (size * 0.45 - textPainter.height / 2)));
//
//     final img =
//     await recorder.endRecording().toImage(size.toInt(), size.toInt());
//     final byteData = await img.toByteData(format: ui.ImageByteFormat.png);
//     final Uint8List pngBytes = byteData!.buffer.asUint8List();
//
//     return BitmapDescriptor.fromBytes(pngBytes);
//   }
//
//   @override
//   void dispose() {
//     _waveController.dispose();
//     _confettiController.dispose();
//     _speechToText.stop();
//     super.dispose();
//   }
//
//   final visibilityManager = DrawerVisibilityManager(enabled: {
//     DrawerFeatures.userProfile,
//     DrawerFeatures.userDailyOffers,
//     DrawerFeatures.userDelivery,
//     DrawerFeatures.providerManageOffers,
//     DrawerFeatures.providerManageContracts,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     final userItems = visibilityManager.buildUserItems();
//     final providerItems = visibilityManager.buildProviderItems();
//     return Scaffold(
//       body: SliderDrawer(
//         key: _sliderKey,
//         sliderOpenSize: 250,
//         // appBar: null,
//         backgroundColor: ManagerColors.white,
//         slideDirection: SlideDirection.rightToLeft,
//         slider: AppDrawer(
//           sliderKey: _sliderKey,
//           userName: "عبدالله الدحو/اني",
//           role: "مستخدم جديد",
//           phone: "0599999999",
//           userItems: userItems,
//           providerItems: providerItems,
//         ),
//         child: Scaffold(
//           body: Obx(() {
//             if (controller.isLoading.value) {
//               return const LoadingWidget();
//             }
//
//             final location = controller.currentLocation.value;
//             if (location == null) {
//               return LocationErrorWidget(
//                 onRetry: _checkAndLoadLocation,
//               );
//             }
//             final LatLng currentLatLng =
//             LatLng(location.latitude, location.longitude);
//             return SafeArea(
//               child: Stack(
//                 children: [
//                   GoogleMap(
//                     initialCameraPosition: CameraPosition(
//                       target: currentLatLng,
//                       zoom: 14,
//                     ),
//                     myLocationEnabled: true,
//                     markers: customMarkers,
//                     trafficEnabled: false,
//                     compassEnabled: false,
//                     buildingsEnabled: false,
//                     mapToolbarEnabled: false,
//                     myLocationButtonEnabled: false,
//                     onMapCreated: (GoogleMapController mapController) async {
//                       String style = await DefaultAssetBundle.of(context)
//                           .loadString('assets/json/style_map.json');
//                       mapController.setMapStyle(style);
//                     },
//                   ),
//                   Padding(
//                     padding: EdgeInsets.only(
//                       left: ManagerWidth.w16,
//                       right: ManagerWidth.w16,
//                       top: ManagerHeight.h24,
//                     ),
//                     child: Row(
//                       children: [
//                         MenuIconButton(
//                           onPressed: () {
//                             _sliderKey.currentState?.toggle();
//                           },
//                         ),
//                         const Spacer(),
//                         NotificationIconButton(
//                           onPressed: () {},
//                           showDot: true,
//                         ),
//                       ],
//                     ),
//                   ),
//                   Positioned(
//                     bottom: 24,
//                     left: 0,
//                     right: 0,
//                     child: Center(
//                       child: GestureDetector(
//                         onTap: _startListening,
//                         child: VoiceAssistantButton(
//                           isListening: _isListening,
//                           audioLevels: _audioLevels,
//                           waveController: _waveController,
//                           onTap: _startListening,
//                         ),
//                       ),
//                     ),
//                   ),
//                   Align(
//                     alignment: Alignment.topCenter,
//                     child: ConfettiWidget(
//                       confettiController: _confettiController,
//                       blastDirectionality: BlastDirectionality.explosive,
//                       shouldLoop: false,
//                       colors: const [
//                         Colors.green,
//                         Colors.blue,
//                         Colors.pink,
//                         Colors.orange,
//                         Colors.purple
//                       ],
//                     ),
//                   ),
//                   // Voice Assistant Panel that appears when mic is pressed
//                   if (_showVoiceAssistant)
//                     Positioned.fill(
//                       child: GestureDetector(
//                         onTap: _closeVoiceAssistant,
//                         child: Container(
//                           color: Colors.black.withOpacity(0.4),
//                           child: DraggableScrollableSheet(
//                             initialChildSize: 0.7,
//                             minChildSize: 0.5,
//                             maxChildSize: 0.9,
//                             builder: (context, scrollController) {
//                               return VoiceAssistantPanel(
//                                 isListening: _isListening,
//                                 recognizedText: _recognizedText,
//                                 audioLevels: _audioLevels,
//                                 waveController: _waveController,
//                                 onStartListening: _startListening,
//                                 onStopListening: _stopListening,
//                                 onClose: _closeVoiceAssistant,
//                                 scrollController: scrollController,
//                               );
//                             },
//                           ),
//                         ),
//                       ),
//                     ),
//                 ],
//               ),
//             );
//           }),
//         ),
//       );,
//     )
//
//     // final userItems = visibilityManager.buildUserItems();
//     // final providerItems = visibilityManager.buildProviderItems();
//     //
//     // return SliderDrawer(
//     //   key: _sliderKey,
//     //   sliderOpenSize: 250,
//     //   appBar: null,
//     //   backgroundColor: ManagerColors.white,
//     //   slideDirection: SlideDirection.rightToLeft,
//     //   slider: AppDrawer(
//     //     sliderKey: _sliderKey,
//     //     userName: "عبدالله الدحو/اني",
//     //     role: "مستخدم جديد",
//     //     phone: "0599999999",
//     //     userItems: userItems,
//     //     providerItems: providerItems,
//     //   ),
//     //   child: Obx(() {
//     //     if (controller.isLoading.value) {
//     //       return const Center(child: LoadingWidget());
//     //     }
//     //
//     //     final location = controller.currentLocation.value;
//     //     if (location == null) {
//     //       return LocationErrorWidget(onRetry: _checkAndLoadLocation);
//     //     }
//     //
//     //     final LatLng currentLatLng =
//     //     LatLng(location.latitude, location.longitude);
//     //
//     //     return SafeArea(
//     //       child: Stack(
//     //         children: [
//     //           GoogleMap(
//     //             initialCameraPosition: CameraPosition(
//     //               target: currentLatLng,
//     //               zoom: 14,
//     //             ),
//     //             myLocationEnabled: true,
//     //             markers: customMarkers,
//     //             trafficEnabled: false,
//     //             compassEnabled: false,
//     //             buildingsEnabled: false,
//     //             mapToolbarEnabled: false,
//     //             myLocationButtonEnabled: false,
//     //             onMapCreated: (GoogleMapController mapController) async {
//     //               String style = await DefaultAssetBundle.of(context)
//     //                   .loadString('assets/json/style_map.json');
//     //               mapController.setMapStyle(style);
//     //             },
//     //           ),
//     //           Padding(
//     //             padding: EdgeInsets.only(
//     //               left: ManagerWidth.w16,
//     //               right: ManagerWidth.w16,
//     //               top: ManagerHeight.h24,
//     //             ),
//     //             child: Row(
//     //               children: [
//     //                 MenuIconButton(
//     //                   onPressed: () {
//     //                     _sliderKey.currentState?.toggle();
//     //                   },
//     //                 ),
//     //                 const Spacer(),
//     //                 NotificationIconButton(
//     //                   onPressed: () {},
//     //                   showDot: true,
//     //                 ),
//     //               ],
//     //             ),
//     //           ),
//     //           Positioned(
//     //             bottom: 24,
//     //             left: 0,
//     //             right: 0,
//     //             child: Center(
//     //               child: GestureDetector(
//     //                 onTap: _startListening,
//     //                 child: VoiceAssistantButton(
//     //                   isListening: _isListening,
//     //                   audioLevels: _audioLevels,
//     //                   waveController: _waveController,
//     //                   onTap: _startListening,
//     //                 ),
//     //               ),
//     //             ),
//     //           ),
//     //           Align(
//     //             alignment: Alignment.topCenter,
//     //             child: ConfettiWidget(
//     //               confettiController: _confettiController,
//     //               blastDirectionality: BlastDirectionality.explosive,
//     //               shouldLoop: false,
//     //               colors: const [
//     //                 Colors.green,
//     //                 Colors.blue,
//     //                 Colors.pink,
//     //                 Colors.orange,
//     //                 Colors.purple
//     //               ],
//     //             ),
//     //           ),
//     //           if (_showVoiceAssistant)
//     //             Positioned.fill(
//     //               child: GestureDetector(
//     //                 onTap: _closeVoiceAssistant,
//     //                 child: Container(
//     //                   color: Colors.black.withOpacity(0.4),
//     //                   child: DraggableScrollableSheet(
//     //                     initialChildSize: 0.7,
//     //                     minChildSize: 0.5,
//     //                     maxChildSize: 0.9,
//     //                     builder: (context, scrollController) {
//     //                       return VoiceAssistantPanel(
//     //                         isListening: _isListening,
//     //                         recognizedText: _recognizedText,
//     //                         audioLevels: _audioLevels,
//     //                         waveController: _waveController,
//     //                         onStartListening: _startListening,
//     //                         onStopListening: _stopListening,
//     //                         onClose: _closeVoiceAssistant,
//     //                         scrollController: scrollController,
//     //                       );
//     //                     },
//     //                   ),
//     //                 ),
//     //               ),
//     //             ),
//     //         ],
//     //       ),
//     //     );
//     //   }),
//     // );
//   }
// }
//
//
// // import 'dart:typed_data';
// // import 'dart:ui' as ui;
// // import 'package:app_mobile/core/resources/manager_height.dart';
// // import 'package:app_mobile/core/resources/manager_icons.dart';
// // import 'package:app_mobile/core/resources/manager_width.dart';
// // import 'package:app_mobile/core/util/snack_bar.dart';
// // import 'package:flutter/material.dart';
// // import 'package:get/get.dart';
// // import 'package:google_maps_flutter/google_maps_flutter.dart';
// // import 'package:geolocator/geolocator.dart';
// // import 'package:flutter_slider_drawer/flutter_slider_drawer.dart';
// // import 'package:speech_to_text/speech_to_text.dart';
// // import 'package:permission_handler/permission_handler.dart';
// // import 'package:confetti/confetti.dart';
// //
// // import '../../../../../core/resources/manager_colors.dart';
// // import '../../../../../core/resources/manager_font_size.dart';
// // import '../../../../../core/resources/manager_styles.dart';
// // import '../../../../../core/widgets/loading_widget.dart';
// // import '../controller/map_controller.dart';
// // import '../widgets/drawer_widget.dart';
// // import '../widgets/location_error_widget.dart';
// // import '../widgets/manager_drawer_items.dart';
// // import '../widgets/menu_icon_button.dart';
// // import '../widgets/notfication_icon_button.dart';
// //
// // class MapScreen extends StatefulWidget {
// //   const MapScreen({super.key});
// //
// //   @override
// //   State<MapScreen> createState() => _MapScreenState();
// // }
// //
// // class _MapScreenState extends State<MapScreen> with TickerProviderStateMixin {
// //   final controller = Get.find<MapController>();
// //   final GlobalKey<SliderDrawerState> _sliderKey = GlobalKey<SliderDrawerState>();
// //   final SpeechToText _speechToText = SpeechToText();
// //   final ConfettiController _confettiController = ConfettiController(duration: const Duration(seconds: 2));
// //
// //   Set<Marker> customMarkers = {};
// //   bool _isListening = false;
// //   bool _speechEnabled = false;
// //   bool _permissionGranted = false;
// //   String _recognizedText = "";
// //   double _audioLevel = 0.0;
// //   List<double> _audioLevels = List.generate(20, (index) => 0.0);
// //   late AnimationController _waveController;
// //   bool _showVoiceAssistant = false;
// //
// //   @override
// //   void initState() {
// //     super.initState();
// //     _waveController = AnimationController(
// //       vsync: this,
// //       duration: const Duration(milliseconds: 800),
// //     )..repeat();
// //     _checkAndLoadLocation();
// //     _initSpeech();
// //   }
// //
// //   /// ====== Check permissions and request them if necessary
// //   Future<void> _checkAndLoadLocation() async {
// //     final hasPermission = await _handleLocationPermission();
// //     if (hasPermission) {
// //       await controller.loadCurrentLocation();
// //       _initMarkers();
// //     }
// //   }
// //
// //   Future<bool> _handleLocationPermission() async {
// //     bool serviceEnabled;
// //     LocationPermission permission;
// //
// //     /// ====== Make sure GPS is enabled
// //     serviceEnabled = await Geolocator.isLocationServiceEnabled();
// //     if (!serviceEnabled) {
// //       AppSnackbar.warning("رجاءً قم بتفعيل خدمة الموقع من الإعدادات.",
// //           englishMessage: "Please enable location services from settings.");
// //       return false;
// //     }
// //
// //     permission = await Geolocator.checkPermission();
// //     if (permission == LocationPermission.denied) {
// //       permission = await Geolocator.requestPermission();
// //       if (permission == LocationPermission.denied) {
// //         AppSnackbar.error("لا يمكن استخدام الخريطة بدون إذن الموقع.",
// //             englishMessage:
// //             "The map cannot be used without location permission.");
// //         return false;
// //       }
// //     }
// //
// //     if (permission == LocationPermission.deniedForever) {
// //       AppSnackbar.error("رجاءً فعّل إذن الموقع يدويًا من إعدادات الهاتف.",
// //           englishMessage:
// //           "Please enable location permission manually from the phone settings.");
// //       return false;
// //     }
// //
// //     return true;
// //   }
// //
// //   /// Initialize Speech Recognition
// //   Future<void> _initSpeech() async {
// //     final status = await Permission.microphone.request();
// //     if (status.isGranted) {
// //       setState(() {
// //         _permissionGranted = true;
// //       });
// //
// //       _speechEnabled = await _speechToText.initialize(
// //         onStatus: (status) {
// //           print('Speech recognition status: $status');
// //           if (status == 'notListening' && _isListening) {
// //             setState(() {
// //               _isListening = false;
// //               if (_recognizedText.isNotEmpty) {
// //                 _confettiController.play();
// //               }
// //             });
// //           }
// //         },
// //         onError: (error) {
// //           print('Speech recognition error: $error');
// //         },
// //       );
// //       setState(() {});
// //     } else {
// //       print('Microphone permission denied');
// //     }
// //   }
// //
// //   Future<void> _startListening() async {
// //     if (!_permissionGranted) {
// //       final status = await Permission.microphone.request();
// //       if (!status.isGranted) {
// //         if (mounted) {
// //           ScaffoldMessenger.of(context).showSnackBar(
// //             const SnackBar(
// //               content: Text('يجب منح إذن استخدام الميكروفون للتمكن من التحدث'),
// //             ),
// //           );
// //         }
// //         return;
// //       } else {
// //         setState(() {
// //           _permissionGranted = true;
// //         });
// //         await _initSpeech();
// //       }
// //     }
// //
// //     setState(() {
// //       _recognizedText = "";
// //       _showVoiceAssistant = true;
// //     });
// //
// //     if (_speechEnabled) {
// //       await _speechToText.listen(
// //         onResult: (result) {
// //           setState(() {
// //             _recognizedText = result.recognizedWords;
// //           });
// //         },
// //         localeId: "ar-SA",
// //         listenMode: ListenMode.confirmation,
// //         onSoundLevelChange: (level) {
// //           setState(() {
// //             _audioLevel = level;
// //             _audioLevels.removeAt(0);
// //             _audioLevels.add(level);
// //           });
// //         },
// //       );
// //       setState(() {
// //         _isListening = true;
// //       });
// //     } else {
// //       await _initSpeech();
// //       if (_speechEnabled) {
// //         await _startListening();
// //       }
// //     }
// //   }
// //
// //   void _stopListening() async {
// //     await _speechToText.stop();
// //     setState(() {
// //       _isListening = false;
// //       if (_recognizedText.isNotEmpty) {
// //         _confettiController.play();
// //       }
// //     });
// //   }
// //
// //   void _closeVoiceAssistant() {
// //     setState(() {
// //       _showVoiceAssistant = false;
// //     });
// //     _stopListening();
// //   }
// //
// //   Future<void> _initMarkers() async {
// //     final location = controller.currentLocation.value;
// //     if (location == null) return;
// //
// //     final restaurantIcon =
// //     await _createCustomMarker(Icons.restaurant, Colors.deepPurple);
// //     final cafeIcon =
// //     await _createCustomMarker(Icons.local_cafe, Colors.deepPurple);
// //     final storeIcon = await _createCustomMarker(Icons.store, Colors.deepPurple);
// //
// //     setState(() {
// //       customMarkers = {
// //         Marker(
// //           markerId: const MarkerId("restaurant"),
// //           position:
// //           LatLng(location.latitude + 0.001, location.longitude + 0.001),
// //           icon: restaurantIcon,
// //           infoWindow: const InfoWindow(title: "مطعم شرقي"),
// //         ),
// //         Marker(
// //           markerId: const MarkerId("cafe"),
// //           position:
// //           LatLng(location.latitude - 0.001, location.longitude - 0.001),
// //           icon: cafeIcon,
// //           infoWindow: const InfoWindow(title: "مقهى"),
// //         ),
// //         Marker(
// //           markerId: const MarkerId("store"),
// //           position:
// //           LatLng(location.latitude + 0.002, location.longitude - 0.001),
// //           icon: storeIcon,
// //           infoWindow: const InfoWindow(title: "سوبر ماركت"),
// //         ),
// //       };
// //     });
// //   }
// //
// //   /// Create a custom marker
// //   Future<BitmapDescriptor> _createCustomMarker(
// //       IconData icon, Color background) async {
// //     final ui.PictureRecorder recorder = ui.PictureRecorder();
// //     final Canvas canvas = Canvas(recorder);
// //     const double size = 120;
// //
// //     final Paint paint = Paint()..color = background;
// //     final Path path = Path();
// //     path.moveTo(size / 2, size);
// //     path.quadraticBezierTo(size, size * 0.6, size / 2, 0);
// //     path.quadraticBezierTo(0, size * 0.6, size / 2, size);
// //     canvas.drawPath(path, paint);
// //
// //     final Paint whiteCircle = Paint()..color = Colors.white;
// //     canvas.drawCircle(Offset(size / 2, size * 0.45), size * 0.18, whiteCircle);
// //
// //     final textPainter = TextPainter(
// //       text: TextSpan(
// //         text: String.fromCharCode(icon.codePoint),
// //         style: TextStyle(
// //           fontSize: size * 0.25,
// //           fontFamily: icon.fontFamily,
// //           color: background,
// //           package: icon.fontPackage,
// //         ),
// //       ),
// //       textDirection: TextDirection.ltr,
// //     );
// //     textPainter.layout();
// //     textPainter.paint(
// //         canvas,
// //         Offset((size - textPainter.width) / 2,
// //             (size * 0.45 - textPainter.height / 2)));
// //
// //     final img =
// //     await recorder.endRecording().toImage(size.toInt(), size.toInt());
// //     final byteData = await img.toByteData(format: ui.ImageByteFormat.png);
// //     final Uint8List pngBytes = byteData!.buffer.asUint8List();
// //
// //     return BitmapDescriptor.fromBytes(pngBytes);
// //   }
// //
// //   @override
// //   void dispose() {
// //     _waveController.dispose();
// //     _confettiController.dispose();
// //     _speechToText.stop();
// //     super.dispose();
// //   }
// //   final visibilityManager = DrawerVisibilityManager(enabled: {
// //     // User features enabled
// //     DrawerFeatures.userProfile,
// //     DrawerFeatures.userDailyOffers,
// //     DrawerFeatures.userDelivery,
// //
// //     // Provider features enabled
// //     DrawerFeatures.providerManageOffers,
// //     DrawerFeatures.providerManageContracts,
// //   });
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     final userItems = visibilityManager.buildUserItems();
// //     final providerItems = visibilityManager.buildProviderItems();
// //
// //    return Obx((){
// //       if (controller.isLoading.value) {
// //         return Scaffold(
// //           body:  Center(child: LoadingWidget()),
// //         );
// //       }
// //
// //       final location = controller.currentLocation.value;
// //       if (location == null) {
// //         return LocationErrorWidget(
// //           onRetry: _checkAndLoadLocation,
// //         );
// //       }
// //
// //       return SliderDrawer(
// //         key: _sliderKey,
// //         sliderOpenSize: 250,
// //         // appBar: null,
// //         backgroundColor: ManagerColors.white,
// //         slideDirection: SlideDirection.rightToLeft,
// //         slider: AppDrawer(
// //           sliderKey: _sliderKey,
// //           userName: "عبدالله الدحو/اني",
// //           role: "مستخدم جديد",
// //           phone: "0599999999",
// //           userItems: userItems,
// //           providerItems: providerItems,
// //         ),
// //         child: Scaffold(
// //           body: Obx(() {
// //             // if (controller.isLoading.value) {
// //             //   return const LoadingWidget();
// //             // }
// //             //
// //             // final location = controller.currentLocation.value;
// //             // if (location == null) {
// //             //   return LocationErrorWidget(
// //             //     onRetry: _checkAndLoadLocation,
// //             //   );
// //             // }
// //
// //             final LatLng currentLatLng =
// //             LatLng(location.latitude, location.longitude);
// //
// //             return SafeArea(
// //               child: Stack(
// //                 children: [
// //                   GoogleMap(
// //                     initialCameraPosition: CameraPosition(
// //                       target: currentLatLng,
// //                       zoom: 14,
// //                     ),
// //                     myLocationEnabled: true,
// //                     markers: customMarkers,
// //                     trafficEnabled: false,
// //                     compassEnabled: false,
// //                     buildingsEnabled: false,
// //                     mapToolbarEnabled: false,
// //                     myLocationButtonEnabled: false,
// //                     onMapCreated: (GoogleMapController mapController) async {
// //                       String style = await DefaultAssetBundle.of(context)
// //                           .loadString('assets/json/style_map.json');
// //                       mapController.setMapStyle(style);
// //                     },
// //                   ),
// //                   Padding(
// //                     padding: EdgeInsets.only(
// //                       left: ManagerWidth.w16,
// //                       right: ManagerWidth.w16,
// //                       top: ManagerHeight.h24,
// //                     ),
// //                     child: Row(
// //                       children: [
// //                         MenuIconButton(
// //                           onPressed: () {
// //                             _sliderKey.currentState?.toggle();
// //                           },
// //                         ),
// //                         const Spacer(),
// //                         NotificationIconButton(
// //                           onPressed: () {},
// //                           showDot: true,
// //                         ),
// //                       ],
// //                     ),
// //                   ),
// //                   Positioned(
// //                     bottom: 24,
// //                     left: 0,
// //                     right: 0,
// //                     child: Center(
// //                       child: GestureDetector(
// //                         onTap: _startListening,
// //                         child: VoiceAssistantButton(
// //                           isListening: _isListening,
// //                           audioLevels: _audioLevels,
// //                           waveController: _waveController,
// //                           onTap: _startListening,
// //                         ),
// //                       ),
// //                     ),
// //                   ),
// //                   Align(
// //                     alignment: Alignment.topCenter,
// //                     child: ConfettiWidget(
// //                       confettiController: _confettiController,
// //                       blastDirectionality: BlastDirectionality.explosive,
// //                       shouldLoop: false,
// //                       colors: const [
// //                         Colors.green,
// //                         Colors.blue,
// //                         Colors.pink,
// //                         Colors.orange,
// //                         Colors.purple
// //                       ],
// //                     ),
// //                   ),
// //
// //                   // Voice Assistant Panel that appears when mic is pressed
// //                   if (_showVoiceAssistant)
// //                     Positioned.fill(
// //                       child: GestureDetector(
// //                         onTap: _closeVoiceAssistant,
// //                         child: Container(
// //                           color: Colors.black.withOpacity(0.4),
// //                           child: DraggableScrollableSheet(
// //                             initialChildSize: 0.7,
// //                             minChildSize: 0.5,
// //                             maxChildSize: 0.9,
// //                             builder: (context, scrollController) {
// //                               return VoiceAssistantPanel(
// //                                 isListening: _isListening,
// //                                 recognizedText: _recognizedText,
// //                                 audioLevels: _audioLevels,
// //                                 waveController: _waveController,
// //                                 onStartListening: _startListening,
// //                                 onStopListening: _stopListening,
// //                                 onClose: _closeVoiceAssistant,
// //                                 scrollController: scrollController,
// //                               );
// //                             },
// //                           ),
// //                         ),
// //                       ),
// //                     ),
// //                 ],
// //               ),
// //             );
// //           }),
// //         ),
// //       );
// //     });
// //
// //
// //   }
// // }
// //
// class VoiceAssistantButton extends StatelessWidget {
//   final bool isListening;
//   final List<double> audioLevels;
//   final AnimationController waveController;
//   final VoidCallback onTap;
//
//   const VoiceAssistantButton({
//     super.key,
//     required this.isListening,
//     required this.audioLevels,
//     required this.waveController,
//     required this.onTap,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return AnimatedBuilder(
//       animation: waveController,
//       builder: (context, child) {
//         return GestureDetector(
//           onTap: onTap,
//           child: Container(
//             width: 80,
//             height: 80,
//             decoration: BoxDecoration(
//               shape: BoxShape.circle,
//               color: ManagerColors.primaryColor,
//               boxShadow: [
//                 BoxShadow(
//                   color: ManagerColors.primaryColor.withOpacity(0.4),
//                   blurRadius: 10,
//                   spreadRadius: isListening ? 5 : 0,
//                 ),
//               ],
//             ),
//             child: Stack(
//               alignment: Alignment.center,
//               children: [
//                 // Waves based on audio level
//                 ...List.generate(3, (index) {
//                   final progress = ((waveController.value + (index * 0.3)) % 1.0);
//                   final waveSize = 80 + (progress * 40) + (isListening ? audioLevels.isNotEmpty ? audioLevels.last * 0.5 : 0 : 0);
//
//                   return Container(
//                     width: waveSize,
//                     height: waveSize,
//                     decoration: BoxDecoration(
//                       shape: BoxShape.circle,
//                       border: Border.all(
//                         color: ManagerColors.primaryColor.withOpacity((1 - progress) * 0.3),
//                         width: 2,
//                       ),
//                     ),
//                   );
//                 }),
//
//                 // Main icon
//                 Icon(
//                   isListening ? Icons.mic : Icons.mic_none,
//                   color: Colors.white,
//                   size: 36,
//                 ),
//
//                 // Pulsating circle when listening
//                 if (isListening)
//                   Container(
//                     width: 80,
//                     height: 80,
//                     decoration: BoxDecoration(
//                       shape: BoxShape.circle,
//                       color: ManagerColors.primaryColor.withOpacity(0.2),
//                     ),
//                   ),
//               ],
//             ),
//           ),
//         );
//       },
//     );
//   }
// }
// //
// class VoiceAssistantPanel extends StatefulWidget {
//   final bool isListening;
//   final String recognizedText;
//   final List<double> audioLevels;
//   final AnimationController waveController;
//   final VoidCallback onStartListening;
//   final VoidCallback onStopListening;
//   final VoidCallback onClose;
//   final ScrollController scrollController;
//
//   const VoiceAssistantPanel({
//     super.key,
//     required this.isListening,
//     required this.recognizedText,
//     required this.audioLevels,
//     required this.waveController,
//     required this.onStartListening,
//     required this.onStopListening,
//     required this.onClose,
//     required this.scrollController,
//   });
//
//   @override
//   State<VoiceAssistantPanel> createState() => _VoiceAssistantPanelState();
// }
//
// class _VoiceAssistantPanelState extends State<VoiceAssistantPanel> {
//   @override
//   Widget build(BuildContext context) {
//     return Container(
//       padding: const EdgeInsets.all(24),
//       decoration: BoxDecoration(
//         color: ManagerColors.primaryColor,
//         borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
//       ),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.start,
//         children: [
//           // Drag handle
//           Center(
//             child: Container(
//               width: 40,
//               height: 5,
//               margin: const EdgeInsets.only(bottom: 16),
//               decoration: BoxDecoration(
//                 color: Colors.white.withOpacity(0.5),
//                 borderRadius: BorderRadius.circular(3),
//               ),
//             ),
//           ),
//
//           Row(
//             mainAxisAlignment: MainAxisAlignment.spaceBetween,
//             children: [
//               IconButton(
//                 icon: const Icon(Icons.close, color: Colors.white),
//                 onPressed: widget.onClose,
//               ),
//               Text(
//                 "المساعد الصوتي",
//                 style: getBoldTextStyle(
//                   fontSize: ManagerFontSize.s18,
//                   color: Colors.white,
//                 ),
//               ),
//               IconButton(
//                 icon: const Icon(Icons.open_in_full, color: Colors.white),
//                 onPressed: () {},
//               ),
//             ],
//           ),
//
//           const SizedBox(height: 20),
//
//           Expanded(
//             child: Container(
//               padding: const EdgeInsets.all(16),
//               decoration: BoxDecoration(
//                 color: Colors.white.withOpacity(0.1),
//                 borderRadius: BorderRadius.circular(16),
//               ),
//               child: Column(
//                 children: [
//                   if (widget.recognizedText.isNotEmpty)
//                     Expanded(
//                       child: SingleChildScrollView(
//                         controller: widget.scrollController,
//                         child: Text(
//                           widget.recognizedText,
//                           style: getRegularTextStyle(
//                             fontSize: ManagerFontSize.s16,
//                             color: Colors.white,
//                           ),
//                           textAlign: TextAlign.center,
//                         ),
//                       ),
//                     )
//                   else
//                     Expanded(
//                       child: SingleChildScrollView(
//                         controller: widget.scrollController,
//                         child: Text(
//                           "تمام، خليني أضبطلك الأطيب.. بس قبل هيك بتحب تختار من الجري والسلطات، ولا نفسك بالأكل الشرقي المشبع؟",
//                           style: getRegularTextStyle(
//                             fontSize: ManagerFontSize.s14,
//                             color: Colors.white,
//                           ),
//                           textAlign: TextAlign.center,
//                         ),
//                       ),
//                     ),
//
//                   const SizedBox(height: 20),
//
//                   // Visual audio level indicator
//                   if (widget.isListening)
//                     Row(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: List.generate(10, (index) {
//                         final level = widget.audioLevels.isNotEmpty
//                             ? widget.audioLevels[widget.audioLevels.length - 1 - (index % widget.audioLevels.length)]
//                             : 0.0;
//                         final height = 10 + (level * 0.5);
//
//                         return Container(
//                           width: 4,
//                           height: height,
//                           margin: const EdgeInsets.symmetric(horizontal: 2),
//                           decoration: BoxDecoration(
//                             color: Colors.white,
//                             borderRadius: BorderRadius.circular(2),
//                           ),
//                         );
//                       }),
//                     ),
//
//                   const SizedBox(height: 20),
//
//                   // Animated mic button
//                   GestureDetector(
//                     onTap: widget.isListening ? widget.onStopListening : widget.onStartListening,
//                     child: AnimatedBuilder(
//                       animation: widget.waveController,
//                       builder: (context, child) {
//                         return Container(
//                           width: 80,
//                           height: 80,
//                           decoration: BoxDecoration(
//                             shape: BoxShape.circle,
//                             color: Colors.white,
//                             boxShadow: [
//                               BoxShadow(
//                                 color: Colors.white.withOpacity(0.4),
//                                 blurRadius: 10,
//                                 spreadRadius: widget.isListening ? 8 : 0,
//                               ),
//                             ],
//                           ),
//                           child: Stack(
//                             alignment: Alignment.center,
//                             children: [
//                               // Waves based on audio level
//                               if (widget.isListening)
//                                 ...List.generate(3, (index) {
//                                   final progress = ((widget.waveController.value + (index * 0.3)) % 1.0);
//                                   final waveSize = 80 + (progress * 60) + (widget.audioLevels.isNotEmpty ? widget.audioLevels.last * 0.8 : 0);
//
//                                   return Container(
//                                     width: waveSize,
//                                     height: waveSize,
//                                     decoration: BoxDecoration(
//                                       shape: BoxShape.circle,
//                                       border: Border.all(
//                                         color: Colors.white.withOpacity((1 - progress) * 0.2),
//                                         width: 2,
//                                       ),
//                                     ),
//                                   );
//                                 }),
//
//                               Icon(
//                                 widget.isListening ? Icons.mic : Icons.mic_none,
//                                 color: ManagerColors.primaryColor,
//                                 size: 36,
//                               ),
//                             ],
//                           ),
//                         );
//                       },
//                     ),
//                   ),
//
//                   const SizedBox(height: 16),
//
//                   Text(
//                     widget.isListening ? "جاري الاستماع..." : "انقر للتحدث",
//                     style: getRegularTextStyle(
//                       fontSize: ManagerFontSize.s14,
//                       color: Colors.white,
//                     ),
//                   ),
//
//                   const SizedBox(height: 10),
//                 ],
//               ),
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }
//
// /// AppDrawer with two sections (User / Providers)
// /// If a section has no items, it will be hidden entirely.
// class AppDrawer extends StatelessWidget {
//   final GlobalKey<SliderDrawerState> sliderKey;
//   final String userName;
//   final String role;
//   final String phone;
//   final String avatar;
//
//   /// Flat items for the "User" section
//   final List<DrawerItemModel> userItems;
//
//   /// Flat items for the "Providers" section
//   final List<DrawerItemModel> providerItems;
//
//   const AppDrawer({
//     super.key,
//     required this.sliderKey,
//     this.userName = "Guest",
//     this.role = "User",
//     this.phone = "",
//     this.avatar = "",
//     this.userItems = const [],
//     this.providerItems = const [],
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     final hasUser = userItems.isNotEmpty;
//     final hasProvider = providerItems.isNotEmpty;
//
//     return Scaffold(
//       backgroundColor: ManagerColors.white,
//       body: SafeArea(
//         child: Container(
//           color: ManagerColors.white,
//           padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),
//           child: SingleChildScrollView(
//             child: Column(
//               crossAxisAlignment: CrossAxisAlignment.stretch,
//               children: [
//                 /// Close button
//                 Align(
//                   alignment: Alignment.topLeft,
//                   child: IconButton(
//                     icon: const Icon(Icons.close,
//                         color: ManagerColors.primaryColor),
//                     onPressed: () => sliderKey.currentState?.closeSlider(),
//                   ),
//                 ),
//
//                 /// User header (name/role/phone)
//                 _buildUserHeader(),
//
//                 const SizedBox(height: 12),
//
//                 /// ===== User section (hidden if empty)
//                 if (hasUser) ...[
//                   _sectionHeader(title: "أقسام طالب الخدمة"),
//                   const SizedBox(height: 6),
//                   ...userItems.map(_drawerItem).toList(),
//                 ],
//
//                 /// Dotted divider only if both sections are visible
//                 if (hasUser && hasProvider) ...[
//                   const SizedBox(height: 12),
//                   _dottedDivider(),
//                   const SizedBox(height: 12),
//                 ],
//
//                 /// ===== Provider section (hidden if empty)
//                 if (hasProvider) ...[
//                   _sectionHeader(title: "أقسام مزودي الخدمة"),
//                   const SizedBox(height: 6),
//                   ...providerItems.map(_drawerItem).toList(),
//                 ],
//               ],
//             ),
//           ),
//         ),
//       ),
//     );
//   }
//
//   /// User header (avatar + name + role + phone)
//   Widget _buildUserHeader() {
//     return Column(
//       children: [
//         VerifiedAvatar(
//           imageUrl: avatar,
//           size: ManagerHeight.h70,
//           isVerified: true,
//         ),
//         // CircleAvatar(
//         //   radius: 34,
//         //   backgroundColor: ManagerColors.primaryColor.withOpacity(0.1),
//         //   child: const Icon(Icons.person, color: ManagerColors.primaryColor, size: 34),
//         // ),
//         const SizedBox(height: 10),
//         Text(
//           userName,
//           style: getBoldTextStyle(
//             fontSize: ManagerFontSize.s14,
//             color: ManagerColors.black,
//           ),
//           textAlign: TextAlign.center,
//         ),
//         const SizedBox(height: 4),
//         Text(
//           role,
//           style: getRegularTextStyle(
//             fontSize: ManagerFontSize.s11,
//             color: ManagerColors.greyWithColor,
//           ),
//           textAlign: TextAlign.center,
//         ),
//         const SizedBox(height: 6),
//         if (phone.isNotEmpty)
//           Row(
//             mainAxisAlignment: MainAxisAlignment.center,
//             children: [
//               const Icon(Icons.phone,
//                   size: 16, color: ManagerColors.primaryColor),
//               SizedBox(width: ManagerWidth.w4),
//               Text(
//                 phone,
//                 style: getRegularTextStyle(
//                   fontSize: ManagerFontSize.s12,
//                   color: ManagerColors.black,
//                 ),
//               ),
//             ],
//           ),
//       ],
//     );
//   }
//
//   /// Unified section header for both sections
//   Widget _sectionHeader({required String title}) {
//     return Row(
//       children: [
//         Container(
//           width: 4,
//           height: 16,
//           decoration: BoxDecoration(
//             color: ManagerColors.primaryColor,
//             borderRadius: BorderRadius.circular(6),
//           ),
//         ),
//         const SizedBox(width: 8),
//         Text(
//           title,
//           style: getBoldTextStyle(
//             fontSize: ManagerFontSize.s12,
//             color: ManagerColors.primaryColor,
//           ),
//         ),
//       ],
//     );
//   }
//
//   /// Single drawer item (flat look)
//   Widget _drawerItem(DrawerItemModel item) {
//     return GestureDetector(
//       onTap: item.onTap,
//       child: Padding(
//         padding:
//             EdgeInsets.only(bottom: ManagerHeight.h12, top: ManagerHeight.h2),
//         child: Row(
//           children: [
//             Image.asset(
//               item.iconPath,
//               width: ManagerWidth.w22,
//               height: ManagerHeight.h22,
//             ),
//             SizedBox(width: ManagerWidth.w4),
//             Expanded(
//               child: Text(
//                 item.title,
//                 style: getRegularTextStyle(
//                   fontSize: ManagerFontSize.s12,
//                   color: ManagerColors.black,
//                 ),
//                 maxLines: 1,
//               ),
//             ),
//             Icon(
//               Icons.chevron_right,
//               color: ManagerColors.greyWithColor.withOpacity(0.8),
//               size: 18,
//             ),
//           ],
//         ),
//       ),
//     );
//   }
//
//   /// Dotted divider between sections (lightweight, no custom painter)
//   Widget _dottedDivider() {
//     return LayoutBuilder(
//       builder: (context, constraints) {
//         // Number of dots based on available width
//         final count = (constraints.maxWidth / 6).floor();
//         return Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           children: List.generate(
//             count,
//             (_) => Container(
//               width: 3,
//               height: 1.2,
//               color: ManagerColors.greyWithColor.withOpacity(0.35),
//             ),
//           ),
//         );
//       },
//     );
//   }
// }
